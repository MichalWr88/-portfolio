@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'fontello';
  src: url("../fonts/fontello.eot?59492822");
  src: url("../fonts/fontello.eot?59492822#iefix") format("embedded-opentype"), url("../fonts/fontello.woff2?59492822") format("woff2"), url("../fonts/fontello.woff?59492822") format("woff"), url("../fonts/fontello.ttf?59492822") format("truetype"), url("../fonts/fontello.svg?59492822#fontello") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?59492822#fontello') format('svg');
  }
}
*/
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-search:before {
  content: '\e800';
}

/* '' */
.icon-down-open:before {
  content: '\e801';
}

/* '' */
.icon-location-inv:before {
  content: '\e802';
}

/* '' */
.icon-right-open:before {
  content: '\e803';
}

/* '' */
.icon-mail:before {
  content: '\e804';
}

/* '' */
.icon-menu:before {
  content: '\e805';
}

/* '' */
.icon-cancel:before {
  content: '\e806';
}

/* '' */
.icon-github-circled:before {
  content: '\f09b';
}

/* '' */
.icon-code:before {
  content: '\f121';
}

/* '' */
.icon-linkedin-squared:before {
  content: '\f30c';
}

/* '' */
body {
  font-family: "Lato", sans-serif;
  margin: 0 auto;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 100%;
  height: 100%;
  background-color: #300032;
  color: #e6e6e8;
}

.section__header {
  position: relative;
  font-family: "Montserrat", sans-serif;
  font-size: 2.0rem;
  width: 50%;
  margin: 20px 0;
  min-width: 200px;
  max-width: 300px;
  padding: 5px 0;
  border: 3px solid #e6e6e8;
  text-align: center;
  border-radius: 5px;
  text-transform: uppercase;
}

.section__header::after, .section__header::before {
  content: '';
  position: absolute;
  height: 3px;
  background-color: #06000a;
  width: 30%;
}

.section__header::after {
  bottom: -3px;
  left: 50%;
}

.section__header::before {
  top: -3px;
  rightt: 50%;
}

.page__main {
  padding-top: 60px;
}

.btn, .nav__hamburger, .banner__start {
  background-color: transparent;
  padding: 5px;
  border: 1px solid #e6e6e8;
  text-transform: uppercase;
}

.page__link {
  position: relative;
  text-decoration: none;
  color: #ffffff;
  padding: 10px;
  -webkit-transition: width 0.5s;
  -o-transition: width 0.5s;
  transition: width 0.5s;
}

.page__link::before {
  content: '';
  position: absolute;
  height: 2px;
  left: 0;
  bottom: 5px;
  right: 0;
  background-color: #300032;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.page__link:hover::before {
  width: 0;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

/* media query */
#loader-wrapper {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  background: #e6e6e8;
  /* display: none; */
}

.load {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  /*change these sizes to fit into your project*/
  width: 100px;
  height: 100px;
}

.load hr {
  border: 0;
  margin: 0;
  width: 40%;
  height: 40%;
  position: absolute;
  border-radius: 50%;
  -webkit-animation: spin 2s ease infinite;
          animation: spin 2s ease infinite;
}

.load :first-child {
  background: #ffffff;
  -webkit-animation-delay: -1.5s;
          animation-delay: -1.5s;
}

.load :nth-child(2) {
  background: #06000a;
  -webkit-animation-delay: -1s;
          animation-delay: -1s;
}

.load :nth-child(3) {
  background: #300032;
  -webkit-animation-delay: -0.5s;
          animation-delay: -0.5s;
}

.load :last-child {
  background: #c43235;
}

@-webkit-keyframes spin {
  0%, 100% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
  25% {
    -webkit-transform: translate(160%);
            transform: translate(160%);
  }
  50% {
    -webkit-transform: translate(160%, 160%);
            transform: translate(160%, 160%);
  }
  75% {
    -webkit-transform: translate(0, 160%);
            transform: translate(0, 160%);
  }
}

@keyframes spin {
  0%, 100% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
  25% {
    -webkit-transform: translate(160%);
            transform: translate(160%);
  }
  50% {
    -webkit-transform: translate(160%, 160%);
            transform: translate(160%, 160%);
  }
  75% {
    -webkit-transform: translate(0, 160%);
            transform: translate(0, 160%);
  }
}

html {
  font-size: 62.5%;
  width: 100%;
  height: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.page__header {
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(230, 230, 232, 0)), color-stop(8%, rgba(130, 103, 132, 0.8)), color-stop(51%, #300032));
  background: -o-linear-gradient(bottom, rgba(230, 230, 232, 0) 0%, rgba(130, 103, 132, 0.8) 8%, #300032 51%);
  background: linear-gradient(0deg, rgba(230, 230, 232, 0) 0%, rgba(130, 103, 132, 0.8) 8%, #300032 51%);
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  height: 60px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: no-wrap;
      flex-wrap: no-wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  color: #ffffff;
  padding: 0px 20px;
}

.page__name .trim {
  display: none;
}

.header__nav {
  -ms-flex-item-align: center;
      align-self: center;
  position: relative;
}

.nav__hamburger {
  font-size: 1.5rem;
  color: #e6e6e8;
}

.nav__hamburger:focus ~ .nav__list {
  -webkit-transform: scaleX(1);
      -ms-transform: scaleX(1);
          transform: scaleX(1);
}

.nav__list {
  position: absolute;
  margin: 0;
  right: -20px;
  top: 44px;
  background: -webkit-gradient(linear, left bottom, left top, from(#300032), color-stop(95%, rgba(130, 103, 132, 0.5)), color-stop(49%, rgba(230, 230, 232, 0)));
  background: -o-linear-gradient(bottom, #300032 0%, rgba(130, 103, 132, 0.5) 95%, rgba(230, 230, 232, 0) 49%);
  background: linear-gradient(0deg, #300032 0%, rgba(130, 103, 132, 0.5) 95%, rgba(230, 230, 232, 0) 49%);
  position: fixed;
  height: auto;
  font-size: 1.5rem;
  display: block;
  padding: 0px 20px 30px 50px;
  overflow: hidden;
  border-bottom-left-radius: 100%;
  border-top-left-radius: 1%;
  text-align: right;
  -webkit-transform-origin: right;
      -ms-transform-origin: right;
          transform-origin: right;
  -webkit-transform: scaleX(0);
      -ms-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.list__elem {
  list-style-type: none;
}

.elem__link {
  text-decoration: none;
  text-transform: uppercase;
  color: #e6e6e8;
  display: block;
  padding: 10px 0;
}

.banner {
  height: calc(100vh - 60px);
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
}

.banner::after {
  content: "";
  background: url("../images/slider/8.jpg");
  background-size: cover;
  background-position: 50% 50%;
  background-attachment: fixed;
  opacity: 0.5;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -1;
  -webkit-filter: opacity(80%);
          filter: opacity(80%);
}

.banner__wrapper {
  position: relative;
  height: auto;
  overflow: hidden;
  width: 0px;
  height: 0px;
  -webkit-animation-timing-function: ease;
          animation-timing-function: ease;
  -webkit-animation: show 2s cubic-bezier(0.51, 0.46, 0.46, 0.76);
          animation: show 2s cubic-bezier(0.51, 0.46, 0.46, 0.76);
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  color: #ffffff;
}

.banner__header {
  font-family: 'Raleway', sans-serif;
  text-transform: uppercase;
  font-size: 4rem;
  padding: 0;
  letter-spacing: 0rem;
  margin: 0;
}

.banner__header::after, .banner__header::before {
  content: '';
  position: absolute;
  height: 15px;
  background-color: #ffffff;
}

.banner__header::after {
  bottom: -9px;
  left: 0;
  right: 0;
}

.banner__header::before {
  top: -9px;
  left: 0;
  right: 0;
}

.banner__workplace {
  font-family: 'Raleway', sans-serif;
  z-index: 3;
  height: 0px;
  margin: auto;
  position: absolute;
  top: 50%;
  left: 0;
  width: 0px;
  padding: 5px 0;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  line-height: 2rem;
  right: 0;
  font-size: 1.8rem;
  overflow: hidden;
  background-color: #c43235;
  color: #300032;
  text-transform: uppercase;
  -webkit-animation: show2 2s cubic-bezier(0.91, 0.46, 0.46, 0.76);
          animation: show2 2s cubic-bezier(0.91, 0.46, 0.46, 0.76);
  -webkit-animation-delay: 4s;
          animation-delay: 4s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  white-space: nowrap;
  text-align: center;
}

.banner__info {
  font-size: 3.5rem;
  text-transform: uppercase;
  text-shadow: 1px 1px 5px  red;
}

.banner__start {
  font-size: 2rem;
}

@-webkit-keyframes show {
  0% {
    width: 2px;
    height: 2px;
    /*color:$color-4;*/
  }
  25% {
    height: 2px;
    /*color:$color-4;*/
  }
  75% {
    height: 2px;
    width: 100%;
    /*color:$color-4;*/
  }
  100% {
    width: 100%;
    height: 120px;
    line-height: 6rem;
    /*color:$color-4;*/
  }
}

@keyframes show {
  0% {
    width: 2px;
    height: 2px;
    /*color:$color-4;*/
  }
  25% {
    height: 2px;
    /*color:$color-4;*/
  }
  75% {
    height: 2px;
    width: 100%;
    /*color:$color-4;*/
  }
  100% {
    width: 100%;
    height: 120px;
    line-height: 6rem;
    /*color:$color-4;*/
  }
}

@-webkit-keyframes show2 {
  0% {
    width: 2px;
    height: 1.8rem;
    /*color:$color-4;*/
  }
  25% {
    height: 1.8rem;
    /*color:$color-4;*/
  }
  75% {
    height: 1.8rem;
    width: 90%;
    /*color:$color-4;*/
  }
  100% {
    width: 90%;
    height: 1.8rem;
    /*color:$color-4;*/
  }
}

@keyframes show2 {
  0% {
    width: 2px;
    height: 1.8rem;
    /*color:$color-4;*/
  }
  25% {
    height: 1.8rem;
    /*color:$color-4;*/
  }
  75% {
    height: 1.8rem;
    width: 90%;
    /*color:$color-4;*/
  }
  100% {
    width: 90%;
    height: 1.8rem;
    /*color:$color-4;*/
  }
}

/* ABOUT */
.about {
  background-color: #06000a;
  padding: 20px;
  color: #c43235;
}

.about__header {
  position: relative;
  font-family: #c43235;
  font-size: 2.0rem;
  width: 50%;
  color: #c43235;
  margin: 20px 0;
  min-width: 200px;
  max-width: 300px;
  padding: 5px 0;
  border: 3px solid #c43235;
  text-align: center;
  border-radius: 5px;
  text-transform: uppercase;
}

.about__header::after, .about__header::before {
  content: '';
  position: absolute;
  height: 3px;
  background-color: #06000a;
  width: 30%;
}

.about__header::after {
  bottom: -3px;
  left: 50%;
}

.about__header::before {
  top: -3px;
  rightt: 50%;
}

.about__profile {
  background-image: url("../images/profile.jpg");
  background-size: cover;
  background-position: top;
  width: 200px;
  height: 220px;
  margin: 0 auto;
  -webkit-clip-path: polygon(50% 0%, 100% 0, 100% 75%, 50% 100%, 0% 75%, 0 0);
          clip-path: polygon(50% 0%, 100% 0, 100% 75%, 50% 100%, 0% 75%, 0 0);
}

.profile__content {
  font-size: 1.5rem;
  letter-spacing: 1px;
  text-align: justify;
  line-height: 1.8rem;
  text-indent: 30px;
  max-width: 1200px;
  margin: 0 auto;
}

.courses__header {
  font-size: 2.0rem;
  text-transform: uppercase;
  margin: 10px 0;
  color: #e6e6e8;
}

.courses__list {
  list-style-type: none;
  padding: 5px;
}

.courses__elem {
  font-size: 1.5rem;
  line-height: 1.8rem;
  margin-bottom: 5px;
}

/* HOBBY */
.about__hobby {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.hobby__header {
  font-size: 2.0rem;
  text-transform: uppercase;
  margin: 10px 0;
  color: #e6e6e8;
  width: 100%;
}

.slider {
  position: relative;
  width: 100%;
  height: 200px;
  overflow: hidden;
}

.slider__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  padding: 0;
  width: 100%;
  position: relative;
  -webkit-transition: .5s ease-in-out;
  -o-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
}

.slider__elem {
  display: inline-block;
  width: 350px;
  -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
          order: 2;
  -webkit-transition: .5s ease-in-out;
  -o-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
}

.slider__elem-first {
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1;
  width: 350px;
  -webkit-transition: .5s ease-in-out;
  -o-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
}

.slider__img {
  width: 300px;
  -webkit-transition: .5s ease-in-out;
  -o-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
}

.slider__btn {
  z-index: 2;
  background-color: transparent;
  color: white;
  font-size: 1.4rem;
  border: none;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

.slider__btn:hover {
  -webkit-transform: scale(1.2);
      -ms-transform: scale(1.2);
          transform: scale(1.2);
}

.slider__btn--next {
  position: absolute;
  right: 0;
  top: 50%;
}

.slider__btn--prev {
  position: absolute;
  left: 0;
  top: 50%;
}

.is-steady {
  -webkit-transform: none;
      -ms-transform: none;
          transform: none;
  -webkit-transition: -webkit-transform 1s ease-in-out;
  transition: -webkit-transform 1s ease-in-out;
  -o-transition: transform 1s ease-in-out;
  transition: transform 1s ease-in-out;
  transition: transform 1s ease-in-out, -webkit-transform 1s ease-in-out;
}

.is-back {
  -webkit-transform: translateX(-300px);
      -ms-transform: translateX(-300px);
          transform: translateX(-300px);
}

/* SKILLS */
.skills {
  padding: 10px 10px 30% 10px;
  background-color: #300032;
  position: relative;
  overflow: hidden;
}

.header__bg {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #e6e6e8;
  -webkit-clip-path: polygon(49% 0, 100% 0, 100% 90%, 50% 100%, 0 90%, 0 0);
          clip-path: polygon(49% 0, 100% 0, 100% 90%, 50% 100%, 0 90%, 0 0);
}

.skills__header {
  position: relative;
  font-family: #c43235;
  font-size: 2.0rem;
  width: 50%;
  color: #c43235;
  margin: 20px 0;
  min-width: 200px;
  max-width: 300px;
  padding: 5px 0;
  border: 3px solid #c43235;
  text-align: center;
  border-radius: 5px;
  text-transform: uppercase;
}

.skills__header::after, .skills__header::before {
  content: '';
  position: absolute;
  height: 3px;
  background-color: #e6e6e8;
  width: 30%;
}

.skills__header::after {
  bottom: -3px;
  left: 50%;
}

.skills__header::before {
  top: -3px;
  rightt: 50%;
}

.skills__list {
  display: grid;
  grid-template-columns: repeat(auto-fill, 100px);
  width: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  grid-gap: 10px;
  padding: 0;
}

.skills__elem {
  position: relative;
  list-style-type: none;
  color: #ffffff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.skills__icon {
  width: 100%;
  height: 90px;
  margin: 0;
}

.skills__icon-sm {
  width: 90px;
}

.skills__details {
  font-size: 1.5rem;
  height: 80%;
  padding: 10px;
}

.skills__details::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.skills__content {
  height: 80%;
}

.skills__btn {
  position: absolute;
  bottom: 20px;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  margin: 0 auto;
  background-color: transparent;
  font-size: 16px;
  font-weight: 900;
  text-decoration: none;
  text-transform: uppercase;
  color: #06000a;
  overflow: hidden;
  border: none;
  cursor: pointer;
  padding: 5px;
}

.skills__btn:before, .skills__btn:after {
  position: absolute;
  width: 100%;
  height: 2px;
  background-color: #06000a;
  -webkit-transition: all .25s;
  -o-transition: all .25s;
  transition: all .25s;
  content: '';
}

.skills__btn:before {
  left: 0;
  top: 0;
}

.skills__btn:after {
  right: 0;
  bottom: 0;
}

.skills__btn:hover:after {
  left: 0;
  top: 0;
  width: 10%;
  -webkit-transition: all .25s;
  -o-transition: all .25s;
  transition: all .25s;
}

.skills__btn:hover:before {
  right: 0;
  top: 0;
  width: 10%;
  -webkit-transition: all .25s;
  -o-transition: all .25s;
  transition: all .25s;
}

/* PORTFOLIO */
.portfolio {
  position: relative;
  background-color: #300032;
  padding: 20px;
  padding-top: 80px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.portfolio__header {
  position: absolute;
  top: 0px;
  left: 20px;
}

.portfolio__header::after, .portfolio__header::before {
  background-color: #300032;
}

.portfolio__list {
  width: 100%;
  padding: 0;
}

.portfolio__elem {
  list-style-type: none;
  margin: 10px;
}

.portfolio__work {
  position: relative;
  margin: 0;
  min-width: 120px;
  max-width: 320px;
  max-height: 320px;
  text-align: center;
  z-index: 1;
}

.portfolio__work:after, .portfolio__work:before {
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  width: 95%;
  height: 90%;
  z-index: -1;
}

.portfolio__work:after {
  background-color: #c43235;
  -webkit-transform: translateY(30px) translateX(25px);
      -ms-transform: translateY(30px) translateX(25px);
          transform: translateY(30px) translateX(25px);
}

.portfolio__work:before {
  border: 10px solid #c43235;
  -webkit-transform: translateY(-20px) translateX(-20px);
      -ms-transform: translateY(-20px) translateX(-20px);
          transform: translateY(-20px) translateX(-20px);
}

.portfolio__work:hover .work__desc {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}

.portfolio__work:hover .work__box {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}

.work__fig {
  position: absolute;
  overflow: hidden;
  top: 10px;
  bottom: 10px;
  left: 5px;
  right: 5px;
  padding: 5px;
  background-color: #e6e6e8;
}

.work__header {
  position: relative;
  font-weight: 400;
  text-transform: uppercase;
  margin: 0;
  padding: 20px 0;
  -webkit-transform: translateY(-20%);
      -ms-transform: translateY(-20%);
          transform: translateY(-20%);
  background-color: red;
  z-index: 3;
}

.work__desc {
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  background-color: red;
  padding: 20px 0;
  -webkit-transform: translateY(-200%);
      -ms-transform: translateY(-200%);
          transform: translateY(-200%);
}

.work__img {
  width: 100%;
  height: auto;
}

.work__btn {
  position: absolute;
  font-size: 2rem;
  border: 1px solid #ffffff;
  padding: 5px;
  padding-bottom: 10px;
  border-radius: 50%;
}

.work__btn:hover {
  background-color: #c43235;
}

.work__btn-live {
  left: 60px;
}

.work__btn-code {
  right: 60px;
}

.work__box {
  position: absolute;
  background-color: #e6e6e8;
  width: 100%;
  bottom: 0;
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
}

.work__icon {
  margin: 5px;
  width: 20px;
}

.portfolio__box {
  max-width: 400px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 400px;
  -webkit-box-shadow: 0px 0px 30px 2px #e6e6e8;
          box-shadow: 0px 0px 30px 2px #e6e6e8;
  margin: 5px;
}

#portfolio_nasa {
  background: url("../images/bg_nasa_api.png");
  background-size: cover;
  background-position: center top;
}

#portfolio_todo {
  background: url("../images/bg_todo.png");
  background-size: cover;
  background-position: center top;
}

#portfolio__wwdc1 {
  background: url("../images/bg_wwdc1.png");
  background-size: cover;
  background-position: center top;
}

.box__content {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  margin: 0;
  padding: 5px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 20px;
  text-align: center;
}

.box__name {
  font-size: 2rem;
  text-transform: uppercase;
  font-family: 'Raleway', sans-serif;
  margin: 40px auto;
}

.box__link {
  display: inline-block;
  position: relative;
  font-size: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  padding: 5px 10px;
  border: 1px solid black;
  border-radius: 5px;
  width: 50px;
  margin: 10px 20px;
  background-color: #e6e6e8;
  color: #300032;
  -webkit-transition: .6s;
  -o-transition: .6s;
  transition: .6s;
}

.box__link:after {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 15%;
  border-radius: 45%;
  background-color: #cccccc;
  opacity: 0.4;
  bottom: -10px;
  left: 0;
  right: 0;
  -webkit-transition: .6s;
  -o-transition: .6s;
  transition: .6s;
  margin: 0 auto;
}

.box__link:hover {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.box__link:hover:after {
  opacity: 0.2;
  bottom: -12px;
  width: 80%;
  margin: 0 auto;
}

.box__description {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  padding: 5px;
  background-color: #06000a;
  font-size: 1.5rem;
}

.description__content {
  align-text: center;
}

.box__icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.portfolio__icon {
  margin: 5px;
  width: 30px;
}

figure.snip1084 figcaption h2 {
  position: relative;
  font-weight: 400;
  text-transform: uppercase;
  margin: 0;
  -webkit-transform: translateY(75%);
  -ms-transform: translateY(75%);
      transform: translateY(75%);
}

figure.snip1084 figcaption h2 span {
  font-weight: 800;
}

figure.snip1084 figcaption p {
  font-size: 0.9em;
  font-weight: 500;
  opacity: 0;
  margin: 0;
}

figure.snip1084:before,
figure.snip1084:after {
  position: absolute;
  top: 20px;
  right: 20px;
  bottom: 20px;
  left: 20px;
  content: '';
  opacity: 0;
  -webkit-transition: opacity 0.6s, -webkit-transform 0.6s;
  transition: opacity 0.6s, -webkit-transform 0.6s, transform 0.6s;
}

figure.snip1084:before {
  border-top: 1px double #fff;
  border-bottom: 1px double #fff;
  -webkit-transform: scale(0, 1);
  -ms-transform: scale(0, 1);
      transform: scale(0, 1);
}

figure.snip1084:after {
  border-right: 1px double #fff;
  border-left: 1px double #fff;
  -webkit-transform: scale(1, 0);
  -ms-transform: scale(1, 0);
      transform: scale(1, 0);
}

figure.snip1084 a {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  position: absolute;
  z-index: 1;
}

figure.snip1084.blue {
  background: #0a212f;
}

figure.snip1084.red {
  background: #36100c;
}

figure.snip1084.yellow {
  background: #562e0a;
}

figure.snip1084:hover img,
figure.snip1084.hover img {
  opacity: 0.2;
  -webkit-filter: blur(5px);
  filter: blur(5px);
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
      transform: scale(1.1);
}

figure.snip1084:hover figcaption h2,
figure.snip1084.hover figcaption h2,
figure.snip1084:hover figcaption p,
figure.snip1084.hover figcaption p {
  opacity: 1;
  border-color: rgba(255, 255, 255, 0.5);
  -webkit-transition-delay: 0.2s;
  -o-transition-delay: 0.2s;
     transition-delay: 0.2s;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
      transform: translateY(0);
}

figure.snip1084:hover figcaption p,
figure.snip1084.hover figcaption p {
  -webkit-transition-delay: 0.3s;
  -o-transition-delay: 0.3s;
     transition-delay: 0.3s;
}

figure.snip1084:hover:before,
figure.snip1084.hover:before,
figure.snip1084:hover:after,
figure.snip1084.hover:after {
  opacity: 0.8;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
      transform: scale(1);
}

/* PORTFOLIO */
.portfolio {
  position: relative;
  background-color: #300032;
  padding: 20px;
  padding-top: 80px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.portfolio__header {
  position: absolute;
  top: 0px;
  left: 20px;
}

.portfolio__header::after, .portfolio__header::before {
  background-color: #300032;
}

.portfolio__box {
  max-width: 400px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 400px;
  -webkit-box-shadow: 0px 0px 30px 2px #e6e6e8;
          box-shadow: 0px 0px 30px 2px #e6e6e8;
  margin: 5px;
}

.box__content {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  background-color: #ffffff;
  margin: 0;
  padding: 5px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 20px;
  text-align: center;
}

.box__name {
  font-size: 2rem;
  text-transform: uppercase;
  font-family: 'Raleway', sans-serif;
  margin: 40px auto;
}

.box__link {
  display: inline-block;
  position: relative;
  font-size: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  padding: 5px 10px;
  border: 1px solid black;
  border-radius: 5px;
  width: 50px;
  margin: 10px 20px;
  background-color: #e6e6e8;
  color: #300032;
  -webkit-transition: .6s;
  -o-transition: .6s;
  transition: .6s;
}

.box__link:after {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 15%;
  border-radius: 45%;
  background-color: #cccccc;
  opacity: 0.4;
  bottom: -10px;
  left: 0;
  right: 0;
  -webkit-transition: .6s;
  -o-transition: .6s;
  transition: .6s;
  margin: 0 auto;
}

.box__link:hover {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.box__link:hover:after {
  opacity: 0.2;
  bottom: -12px;
  width: 80%;
  margin: 0 auto;
}

.box__description {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  padding: 5px;
  background-color: #06000a;
  font-size: 1.5rem;
}

.description__content {
  align-text: center;
}

.box__icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.portfolio__icon {
  margin: 5px;
}

/* KONTAKT */
.contact {
  position: relative;
  background-color: #e6e6e8;
  color: #300032;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  padding-top: 70px;
  font-size: 1.5rem;
}

.contact__header {
  border-color: #300032;
  position: absolute;
  top: 0px;
  left: 20px;
}

.contact__header::after, .contact__header::before {
  background-color: #e6e6e8;
}

.contact__method {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.method__mail {
  margin: 20px;
}

.method__social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 10px;
  padding: 0;
}

.social__elem {
  list-style-type: none;
  text-align: center;
}

.social__header {
  text-transform: uppercase;
  margin: 5px;
}

.social__icon {
  font-size: 2.5rem;
}

#map {
  width: 100%;
  height: 200px;
  background-color: grey;
}

/* FOOTER */
.page__footer {
  background-color: #300032;
  height: auto;
  font-size: 1.5rem;
}

.footer__content {
  font-family: 'Raleway', sans-serif;
  margin: 0;
  padding: 5px;
  text-align: center;
  color: #e6e6e8;
}

.hide {
  display: none;
}

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInZlbmRvci9fbW9kZXJuaXplLnNjc3MiLCJ2ZW5kb3IvX2ZvbnRlbGxvLnNjc3MiLCJtb2R1bGVzL19zZXR0aW5ncy5zY3NzIiwicGFydGlhbHMvX2hlYWRlci5zY3NzIiwicGFydGlhbHMvX2Jhbm5lci5zY3NzIiwicGFydGlhbHMvX2Fib3V0LnNjc3MiLCJtb2R1bGVzL19taXhpbnMuc2NzcyIsInBhcnRpYWxzL19za2lsbHMuc2NzcyIsInBhcnRpYWxzL19wb3J0Zm9saW8uc2NzcyIsInBhcnRpYWxzL19tYWluLnNjc3MiLCJzdHlsZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ0FqQiw0RUFBNEU7QUFFNUU7Z0ZBQ2dGO0FBRWhGOzs7O0dBSUc7QUFFSDtFQUNFLGtCQUFpQjtFQUFHLE9BQU87RUFDM0IsMkJBQTBCO0VBQUcsT0FBTztFQUNwQywrQkFBOEI7RUFBRyxPQUFPO0NBQ3pDOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsVUFBUztDQUNWOztBQUVEOztHQUVHO0FBRUg7Ozs7OztFQU1FLGVBQWM7Q0FDZjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0I7Q0FDakI7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVIOzs7RUFFTyxPQUFPO0VBQ1osZUFBYztDQUNmOztBQUVEOztHQUVHO0FBRUg7RUFDRSxpQkFBZ0I7Q0FDakI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxnQ0FBdUI7VUFBdkIsd0JBQXVCO0VBQUcsT0FBTztFQUNqQyxVQUFTO0VBQUcsT0FBTztFQUNuQixrQkFBaUI7RUFBRyxPQUFPO0NBQzVCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0Usa0NBQWlDO0VBQUcsT0FBTztFQUMzQyxlQUFjO0VBQUcsT0FBTztDQUN6Qjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7RUFDRSw4QkFBNkI7RUFBRyxPQUFPO0VBQ3ZDLHNDQUFx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USxZQUFXO0VBQ1gsY0FBYTtFQUNiLHVCQUFzQjtDQUV2Qjs7QUFPUCxZQUFZO0FBRVo7RUFDRSwwQlB4TWU7RU95TWhCLGFBQVc7RUFDWCxrQkFBZ0I7Q0FFaEI7O0FBQ0Q7RUFDRSxtQ0FBa0M7RUFDbEMsVUFBUTtFQUNSLGFBQVc7RUFDWCxtQkFBaUI7RUFDakIsZVAvTWM7Q09nTmY7O0FDdE1EO0VBQ0MsY0FBWTtDQUNaIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXHJcbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmZvb3RlcixcbmhlYWRlcixcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5tYWluIHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cclxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cclxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cclxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXHJcbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxyXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXHJcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcclxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXHJcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cclxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovXG59XG5cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXG5wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXHJcbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxyXG4gKi9cbmRldGFpbHMsXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBTY3JpcHRpbmdcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICovXG5jYW52YXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cclxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2ZvbnRlbGxvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9mb250ZWxsby5lb3Q/NTk0OTI4MjJcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZm9udGVsbG8uZW90PzU5NDkyODIyI2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9mb250ZWxsby53b2ZmMj81OTQ5MjgyMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvZm9udGVsbG8ud29mZj81OTQ5MjgyMlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9mb250ZWxsby50dGY/NTk0OTI4MjJcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2ZvbnRlbGxvLnN2Zz81OTQ5MjgyMiNmb250ZWxsb1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLyogQ2hyb21lIGhhY2s6IFNWRyBpcyByZW5kZXJlZCBtb3JlIHNtb290aCBpbiBXaW5kb3p6ZS4gMTAwJSBtYWdpYywgdW5jb21tZW50IGlmIHlvdSBuZWVkIGl0LiAqL1xuLyogTm90ZSwgdGhhdCB3aWxsIGJyZWFrIGhpbnRpbmchIEluIG90aGVyIE9TLWVzIGZvbnQgd2lsbCBiZSBub3QgYXMgc2hhcnAgYXMgaXQgY291bGQgYmUgKi9cbi8qXHJcbkBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MCkge1xyXG4gIEBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdmb250ZWxsbyc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udC9mb250ZWxsby5zdmc/NTk0OTI4MjIjZm9udGVsbG8nKSBmb3JtYXQoJ3N2ZycpO1xyXG4gIH1cclxufVxyXG4qL1xuW2NsYXNzXj1cImljb24tXCJdOmJlZm9yZSwgW2NsYXNzKj1cIiBpY29uLVwiXTpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJmb250ZWxsb1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHNwZWFrOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgd2lkdGg6IDFlbTtcbiAgbWFyZ2luLXJpZ2h0OiAuMmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIC8qIG9wYWNpdHk6IC44OyAqL1xuICAvKiBGb3Igc2FmZXR5IC0gcmVzZXQgcGFyZW50IHN0eWxlcywgdGhhdCBjYW4gYnJlYWsgZ2x5cGggY29kZXMqL1xuICBmb250LXZhcmlhbnQ6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIC8qIGZpeCBidXR0b25zIGhlaWdodCwgZm9yIHR3aXR0ZXIgYm9vdHN0cmFwICovXG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIC8qIEFuaW1hdGlvbiBjZW50ZXIgY29tcGVuc2F0aW9uIC0gbWFyZ2lucyBzaG91bGQgYmUgc3ltbWV0cmljICovXG4gIC8qIHJlbW92ZSBpZiBub3QgbmVlZGVkICovXG4gIG1hcmdpbi1sZWZ0OiAuMmVtO1xuICAvKiB5b3UgY2FuIGJlIG1vcmUgY29tZm9ydGFibGUgd2l0aCBpbmNyZWFzZWQgaWNvbnMgc2l6ZSAqL1xuICAvKiBmb250LXNpemU6IDEyMCU7ICovXG4gIC8qIEZvbnQgc21vb3RoaW5nLiBUaGF0IHdhcyB0YWtlbiBmcm9tIFRXQlMgKi9cbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC8qIFVuY29tbWVudCBmb3IgM0QgZWZmZWN0ICovXG4gIC8qIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCByZ2JhKDEyNywgMTI3LCAxMjcsIDAuMyk7ICovXG59XG5cbi5pY29uLXNlYXJjaDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODAwJztcbn1cblxuLyogJ+6ggCcgKi9cbi5pY29uLWRvd24tb3BlbjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODAxJztcbn1cblxuLyogJ+6ggScgKi9cbi5pY29uLWxvY2F0aW9uLWludjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODAyJztcbn1cblxuLyogJ+6ggicgKi9cbi5pY29uLXJpZ2h0LW9wZW46YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgwMyc7XG59XG5cbi8qICfuoIMnICovXG4uaWNvbi1tYWlsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MDQnO1xufVxuXG4vKiAn7qCEJyAqL1xuLmljb24tbWVudTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODA1Jztcbn1cblxuLyogJ+6ghScgKi9cbi5pY29uLWNhbmNlbDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODA2Jztcbn1cblxuLyogJ+6ghicgKi9cbi5pY29uLWdpdGh1Yi1jaXJjbGVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGYwOWInO1xufVxuXG4vKiAn74KbJyAqL1xuLmljb24tY29kZTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxmMTIxJztcbn1cblxuLyogJ++EoScgKi9cbi5pY29uLWxpbmtlZGluLXNxdWFyZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZjMwYyc7XG59XG5cbi8qICfvjIwnICovXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwMDAzMjtcbiAgY29sb3I6ICNlNmU2ZTg7XG59XG5cbi5zZWN0aW9uX19oZWFkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAyLjByZW07XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMjBweCAwO1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICBwYWRkaW5nOiA1cHggMDtcbiAgYm9yZGVyOiAzcHggc29saWQgI2U2ZTZlODtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5zZWN0aW9uX19oZWFkZXI6OmFmdGVyLCAuc2VjdGlvbl9faGVhZGVyOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA2MDAwYTtcbiAgd2lkdGg6IDMwJTtcbn1cblxuLnNlY3Rpb25fX2hlYWRlcjo6YWZ0ZXIge1xuICBib3R0b206IC0zcHg7XG4gIGxlZnQ6IDUwJTtcbn1cblxuLnNlY3Rpb25fX2hlYWRlcjo6YmVmb3JlIHtcbiAgdG9wOiAtM3B4O1xuICByaWdodHQ6IDUwJTtcbn1cblxuLnBhZ2VfX21haW4ge1xuICBwYWRkaW5nLXRvcDogNjBweDtcbn1cblxuLmJ0biwgLm5hdl9faGFtYnVyZ2VyLCAuYmFubmVyX19zdGFydCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiA1cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5wYWdlX19saW5rIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBwYWRkaW5nOiAxMHB4O1xuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjVzO1xufVxuXG4ucGFnZV9fbGluazo6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAycHg7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogNXB4O1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwMDAzMjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi5wYWdlX19saW5rOmhvdmVyOjpiZWZvcmUge1xuICB3aWR0aDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi8qIG1lZGlhIHF1ZXJ5ICovXG4jbG9hZGVyLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTAwMDtcbiAgYmFja2dyb3VuZDogI2U2ZTZlODtcbiAgLyogZGlzcGxheTogbm9uZTsgKi9cbn1cblxuLmxvYWQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAvKmNoYW5nZSB0aGVzZSBzaXplcyB0byBmaXQgaW50byB5b3VyIHByb2plY3QqL1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTAwcHg7XG59XG5cbi5sb2FkIGhyIHtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIHdpZHRoOiA0MCU7XG4gIGhlaWdodDogNDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBzcGluIDJzIGVhc2UgaW5maW5pdGU7XG59XG5cbi5sb2FkIDpmaXJzdC1jaGlsZCB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGFuaW1hdGlvbi1kZWxheTogLTEuNXM7XG59XG5cbi5sb2FkIDpudGgtY2hpbGQoMikge1xuICBiYWNrZ3JvdW5kOiAjMDYwMDBhO1xuICBhbmltYXRpb24tZGVsYXk6IC0xcztcbn1cblxuLmxvYWQgOm50aC1jaGlsZCgzKSB7XG4gIGJhY2tncm91bmQ6ICMzMDAwMzI7XG4gIGFuaW1hdGlvbi1kZWxheTogLTAuNXM7XG59XG5cbi5sb2FkIDpsYXN0LWNoaWxkIHtcbiAgYmFja2dyb3VuZDogI2M0MzIzNTtcbn1cblxuQGtleWZyYW1lcyBzcGluIHtcbiAgMCUsIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApO1xuICB9XG4gIDI1JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTYwJSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxNjAlLCAxNjAlKTtcbiAgfVxuICA3NSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDE2MCUpO1xuICB9XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4ucGFnZV9faGVhZGVyIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYmEoMjMwLCAyMzAsIDIzMiwgMCkgMCUsIHJnYmEoMTMwLCAxMDMsIDEzMiwgMC44KSA4JSwgIzMwMDAzMiA1MSUpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiA2MHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IG5vLXdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDBweCAyMHB4O1xufVxuXG4ucGFnZV9fbmFtZSAudHJpbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX25hdiB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubmF2X19oYW1idXJnZXIge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgY29sb3I6ICNlNmU2ZTg7XG59XG5cbi5uYXZfX2hhbWJ1cmdlcjpmb2N1cyB+IC5uYXZfX2xpc3Qge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbn1cblxuLm5hdl9fbGlzdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luOiAwO1xuICByaWdodDogLTIwcHg7XG4gIHRvcDogNDRweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsICMzMDAwMzIgMCUsIHJnYmEoMTMwLCAxMDMsIDEzMiwgMC41KSA5NSUsIHJnYmEoMjMwLCAyMzAsIDIzMiwgMCkgNDklKTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBoZWlnaHQ6IGF1dG87XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMHB4IDIwcHggMzBweCA1MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxMDAlO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xuICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi5saXN0X19lbGVtIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG4uZWxlbV9fbGluayB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNlNmU2ZTg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG5cbi5iYW5uZXIge1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA2MHB4KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5iYW5uZXI6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL3NsaWRlci84LmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgb3BhY2l0eTogMC41O1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIGZpbHRlcjogb3BhY2l0eSg4MCUpO1xufVxuXG4uYmFubmVyX193cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAwcHg7XG4gIGhlaWdodDogMHB4O1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xuICBhbmltYXRpb246IHNob3cgMnMgY3ViaWMtYmV6aWVyKDAuNTEsIDAuNDYsIDAuNDYsIDAuNzYpO1xuICBhbmltYXRpb24tZGVsYXk6IDJzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5iYW5uZXJfX2hlYWRlciB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgcGFkZGluZzogMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDByZW07XG4gIG1hcmdpbjogMDtcbn1cblxuLmJhbm5lcl9faGVhZGVyOjphZnRlciwgLmJhbm5lcl9faGVhZGVyOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbi5iYW5uZXJfX2hlYWRlcjo6YWZ0ZXIge1xuICBib3R0b206IC05cHg7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4uYmFubmVyX19oZWFkZXI6OmJlZm9yZSB7XG4gIHRvcDogLTlweDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5iYW5uZXJfX3dvcmtwbGFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIHotaW5kZXg6IDM7XG4gIGhlaWdodDogMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAwcHg7XG4gIHBhZGRpbmc6IDVweCAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xuICByaWdodDogMDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNjNDMyMzU7XG4gIGNvbG9yOiAjMzAwMDMyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBhbmltYXRpb246IHNob3cyIDJzIGN1YmljLWJlemllcigwLjkxLCAwLjQ2LCAwLjQ2LCAwLjc2KTtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0cztcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJhbm5lcl9faW5mbyB7XG4gIGZvbnQtc2l6ZTogMy41cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCA1cHggIHJlZDtcbn1cblxuLmJhbm5lcl9fc3RhcnQge1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbkBrZXlmcmFtZXMgc2hvdyB7XG4gIDAlIHtcbiAgICB3aWR0aDogMnB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cbiAgfVxuICAyNSUge1xuICAgIGhlaWdodDogMnB4O1xuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cbiAgfVxuICA3NSUge1xuICAgIGhlaWdodDogMnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cbiAgfVxuICAxMDAlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA2cmVtO1xuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNob3cyIHtcbiAgMCUge1xuICAgIHdpZHRoOiAycHg7XG4gICAgaGVpZ2h0OiAxLjhyZW07XG4gICAgLypjb2xvcjokY29sb3ItNDsqL1xuICB9XG4gIDI1JSB7XG4gICAgaGVpZ2h0OiAxLjhyZW07XG4gICAgLypjb2xvcjokY29sb3ItNDsqL1xuICB9XG4gIDc1JSB7XG4gICAgaGVpZ2h0OiAxLjhyZW07XG4gICAgd2lkdGg6IDkwJTtcbiAgICAvKmNvbG9yOiRjb2xvci00OyovXG4gIH1cbiAgMTAwJSB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBoZWlnaHQ6IDEuOHJlbTtcbiAgICAvKmNvbG9yOiRjb2xvci00OyovXG4gIH1cbn1cblxuLyogQUJPVVQgKi9cbi5hYm91dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNjAwMGE7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGNvbG9yOiAjYzQzMjM1O1xufVxuXG4uYWJvdXRfX2hlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1mYW1pbHk6ICNjNDMyMzU7XG4gIGZvbnQtc2l6ZTogMi4wcmVtO1xuICB3aWR0aDogNTAlO1xuICBjb2xvcjogI2M0MzIzNTtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIG1pbi13aWR0aDogMjAwcHg7XG4gIG1heC13aWR0aDogMzAwcHg7XG4gIHBhZGRpbmc6IDVweCAwO1xuICBib3JkZXI6IDNweCBzb2xpZCAjYzQzMjM1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmFib3V0X19oZWFkZXI6OmFmdGVyLCAuYWJvdXRfX2hlYWRlcjo6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNjAwMGE7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5hYm91dF9faGVhZGVyOjphZnRlciB7XG4gIGJvdHRvbTogLTNweDtcbiAgbGVmdDogNTAlO1xufVxuXG4uYWJvdXRfX2hlYWRlcjo6YmVmb3JlIHtcbiAgdG9wOiAtM3B4O1xuICByaWdodHQ6IDUwJTtcbn1cblxuLmFib3V0X19wcm9maWxlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Byb2ZpbGUuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAyMjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGNsaXAtcGF0aDogcG9seWdvbig1MCUgMCUsIDEwMCUgMCwgMTAwJSA3NSUsIDUwJSAxMDAlLCAwJSA3NSUsIDAgMCk7XG59XG5cbi5wcm9maWxlX19jb250ZW50IHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIGxpbmUtaGVpZ2h0OiAxLjhyZW07XG4gIHRleHQtaW5kZW50OiAzMHB4O1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jb3Vyc2VzX19oZWFkZXIge1xuICBmb250LXNpemU6IDIuMHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIGNvbG9yOiAjZTZlNmU4O1xufVxuXG4uY291cnNlc19fbGlzdCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogNXB4O1xufVxuXG4uY291cnNlc19fZWxlbSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS44cmVtO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi8qIEhPQkJZICovXG4uYWJvdXRfX2hvYmJ5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmhvYmJ5X19oZWFkZXIge1xuICBmb250LXNpemU6IDIuMHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIGNvbG9yOiAjZTZlNmU4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnNsaWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMjAwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zbGlkZXJfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiAuNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5zbGlkZXJfX2VsZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAzNTBweDtcbiAgb3JkZXI6IDI7XG4gIHRyYW5zaXRpb246IC41cyBlYXNlLWluLW91dDtcbn1cblxuLnNsaWRlcl9fZWxlbS1maXJzdCB7XG4gIG9yZGVyOiAxO1xuICB3aWR0aDogMzUwcHg7XG4gIHRyYW5zaXRpb246IC41cyBlYXNlLWluLW91dDtcbn1cblxuLnNsaWRlcl9faW1nIHtcbiAgd2lkdGg6IDMwMHB4O1xuICB0cmFuc2l0aW9uOiAuNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5zbGlkZXJfX2J0biB7XG4gIHotaW5kZXg6IDI7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIHRyYW5zaXRpb246IDAuNXM7XG59XG5cbi5zbGlkZXJfX2J0bjpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbn1cblxuLnNsaWRlcl9fYnRuLS1uZXh0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG59XG5cbi5zbGlkZXJfX2J0bi0tcHJldiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiA1MCU7XG59XG5cbi5pcy1zdGVhZHkge1xuICB0cmFuc2Zvcm06IG5vbmU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlLWluLW91dDtcbn1cblxuLmlzLWJhY2sge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwMHB4KTtcbn1cblxuLyogU0tJTExTICovXG4uc2tpbGxzIHtcbiAgcGFkZGluZzogMTBweCAxMHB4IDMwJSAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzAwMDMyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5oZWFkZXJfX2JnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTg7XG4gIGNsaXAtcGF0aDogcG9seWdvbig0OSUgMCwgMTAwJSAwLCAxMDAlIDkwJSwgNTAlIDEwMCUsIDAgOTAlLCAwIDApO1xufVxuXG4uc2tpbGxzX19oZWFkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiAjYzQzMjM1O1xuICBmb250LXNpemU6IDIuMHJlbTtcbiAgd2lkdGg6IDUwJTtcbiAgY29sb3I6ICNjNDMyMzU7XG4gIG1hcmdpbjogMjBweCAwO1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICBwYWRkaW5nOiA1cHggMDtcbiAgYm9yZGVyOiAzcHggc29saWQgI2M0MzIzNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5za2lsbHNfX2hlYWRlcjo6YWZ0ZXIsIC5za2lsbHNfX2hlYWRlcjo6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTg7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5za2lsbHNfX2hlYWRlcjo6YWZ0ZXIge1xuICBib3R0b206IC0zcHg7XG4gIGxlZnQ6IDUwJTtcbn1cblxuLnNraWxsc19faGVhZGVyOjpiZWZvcmUge1xuICB0b3A6IC0zcHg7XG4gIHJpZ2h0dDogNTAlO1xufVxuXG4uc2tpbGxzX19saXN0IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCAxMDBweCk7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ3JpZC1nYXA6IDEwcHg7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5za2lsbHNfX2VsZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbi5za2lsbHNfX2ljb24ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA5MHB4O1xuICBtYXJnaW46IDA7XG59XG5cbi5za2lsbHNfX2ljb24tc20ge1xuICB3aWR0aDogOTBweDtcbn1cblxuLnNraWxsc19fZGV0YWlscyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBoZWlnaHQ6IDgwJTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLnNraWxsc19fZGV0YWlsczo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5za2lsbHNfX2NvbnRlbnQge1xuICBoZWlnaHQ6IDgwJTtcbn1cblxuLnNraWxsc19fYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzA2MDAwYTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDVweDtcbn1cblxuLnNraWxsc19fYnRuOmJlZm9yZSwgLnNraWxsc19fYnRuOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNjAwMGE7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xuICBjb250ZW50OiAnJztcbn1cblxuLnNraWxsc19fYnRuOmJlZm9yZSB7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbn1cblxuLnNraWxsc19fYnRuOmFmdGVyIHtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbn1cblxuLnNraWxsc19fYnRuOmhvdmVyOmFmdGVyIHtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAlO1xuICB0cmFuc2l0aW9uOiBhbGwgLjI1cztcbn1cblxuLnNraWxsc19fYnRuOmhvdmVyOmJlZm9yZSB7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMCU7XG4gIHRyYW5zaXRpb246IGFsbCAuMjVzO1xufVxuXG4vKiBQT1JURk9MSU8gKi9cbi5wb3J0Zm9saW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDAwMzI7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHBhZGRpbmctdG9wOiA4MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4ucG9ydGZvbGlvX19oZWFkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiAyMHB4O1xufVxuXG4ucG9ydGZvbGlvX19oZWFkZXI6OmFmdGVyLCAucG9ydGZvbGlvX19oZWFkZXI6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDAwMzI7XG59XG5cbi5wb3J0Zm9saW9fX2xpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMDtcbn1cblxuLnBvcnRmb2xpb19fZWxlbSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAxMHB4O1xufVxuXG4ucG9ydGZvbGlvX193b3JrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDA7XG4gIG1pbi13aWR0aDogMTIwcHg7XG4gIG1heC13aWR0aDogMzIwcHg7XG4gIG1heC1oZWlnaHQ6IDMyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5wb3J0Zm9saW9fX3dvcms6YWZ0ZXIsIC5wb3J0Zm9saW9fX3dvcms6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogOTUlO1xuICBoZWlnaHQ6IDkwJTtcbiAgei1pbmRleDogLTE7XG59XG5cbi5wb3J0Zm9saW9fX3dvcms6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzQzMjM1O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzBweCkgdHJhbnNsYXRlWCgyNXB4KTtcbn1cblxuLnBvcnRmb2xpb19fd29yazpiZWZvcmUge1xuICBib3JkZXI6IDEwcHggc29saWQgI2M0MzIzNTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KSB0cmFuc2xhdGVYKC0yMHB4KTtcbn1cblxuLnBvcnRmb2xpb19fd29yazpob3ZlciAud29ya19fZGVzYyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbn1cblxuLnBvcnRmb2xpb19fd29yazpob3ZlciAud29ya19fYm94IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xufVxuXG4ud29ya19fZmlnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0b3A6IDEwcHg7XG4gIGJvdHRvbTogMTBweDtcbiAgbGVmdDogNXB4O1xuICByaWdodDogNXB4O1xuICBwYWRkaW5nOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTg7XG59XG5cbi53b3JrX19oZWFkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMjBweCAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgei1pbmRleDogMztcbn1cblxuLndvcmtfX2Rlc2Mge1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMDAlKTtcbn1cblxuLndvcmtfX2ltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi53b3JrX19idG4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcbiAgcGFkZGluZzogNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4ud29ya19fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M0MzIzNTtcbn1cblxuLndvcmtfX2J0bi1saXZlIHtcbiAgbGVmdDogNjBweDtcbn1cblxuLndvcmtfX2J0bi1jb2RlIHtcbiAgcmlnaHQ6IDYwcHg7XG59XG5cbi53b3JrX19ib3gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTg7XG4gIHdpZHRoOiAxMDAlO1xuICBib3R0b206IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbn1cblxuLndvcmtfX2ljb24ge1xuICBtYXJnaW46IDVweDtcbiAgd2lkdGg6IDIwcHg7XG59XG5cbi5wb3J0Zm9saW9fX2JveCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBoZWlnaHQ6IDQwMHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDMwcHggMnB4ICNlNmU2ZTg7XG4gIG1hcmdpbjogNXB4O1xufVxuXG4jcG9ydGZvbGlvX25hc2Ege1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYmdfbmFzYV9hcGkucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xufVxuXG4jcG9ydGZvbGlvX3RvZG8ge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYmdfdG9kby5wbmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG59XG5cbiNwb3J0Zm9saW9fX3d3ZGMxIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2JnX3d3ZGMxLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbn1cblxuLmJveF9fY29udGVudCB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiA1cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJveF9fbmFtZSB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiA0MHB4IGF1dG87XG59XG5cbi5ib3hfX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAycmVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB3aWR0aDogNTBweDtcbiAgbWFyZ2luOiAxMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTg7XG4gIGNvbG9yOiAjMzAwMDMyO1xuICB0cmFuc2l0aW9uOiAuNnM7XG59XG5cbi5ib3hfX2xpbms6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNSU7XG4gIGJvcmRlci1yYWRpdXM6IDQ1JTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcbiAgb3BhY2l0eTogMC40O1xuICBib3R0b206IC0xMHB4O1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdHJhbnNpdGlvbjogLjZzO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmJveF9fbGluazpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cblxuLmJveF9fbGluazpob3ZlcjphZnRlciB7XG4gIG9wYWNpdHk6IDAuMjtcbiAgYm90dG9tOiAtMTJweDtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5ib3hfX2Rlc2NyaXB0aW9uIHtcbiAgZmxleC1iYXNpczogNTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNjAwMGE7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuXG4uZGVzY3JpcHRpb25fX2NvbnRlbnQge1xuICBhbGlnbi10ZXh0OiBjZW50ZXI7XG59XG5cbi5ib3hfX2ljb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5wb3J0Zm9saW9fX2ljb24ge1xuICBtYXJnaW46IDVweDtcbiAgd2lkdGg6IDMwcHg7XG59XG5cbmZpZ3VyZS5zbmlwMTA4NCBmaWdjYXB0aW9uIGgyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDc1JSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg3NSUpO1xufVxuXG5maWd1cmUuc25pcDEwODQgZmlnY2FwdGlvbiBoMiBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuZmlndXJlLnNuaXAxMDg0IGZpZ2NhcHRpb24gcCB7XG4gIGZvbnQtc2l6ZTogMC45ZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIG9wYWNpdHk6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuZmlndXJlLnNuaXAxMDg0OmJlZm9yZSxcbmZpZ3VyZS5zbmlwMTA4NDphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbiAgYm90dG9tOiAyMHB4O1xuICBsZWZ0OiAyMHB4O1xuICBjb250ZW50OiAnJztcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnMsIC13ZWJraXQtdHJhbnNmb3JtIDAuNnM7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC42cywgLXdlYmtpdC10cmFuc2Zvcm0gMC42cywgLW1vei10cmFuc2Zvcm0gMC42cywgLW8tdHJhbnNmb3JtIDAuNnMsIHRyYW5zZm9ybSAwLjZzO1xufVxuXG5maWd1cmUuc25pcDEwODQ6YmVmb3JlIHtcbiAgYm9yZGVyLXRvcDogMXB4IGRvdWJsZSAjZmZmO1xuICBib3JkZXItYm90dG9tOiAxcHggZG91YmxlICNmZmY7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLCAxKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLCAxKTtcbn1cblxuZmlndXJlLnNuaXAxMDg0OmFmdGVyIHtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggZG91YmxlICNmZmY7XG4gIGJvcmRlci1sZWZ0OiAxcHggZG91YmxlICNmZmY7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTtcbn1cblxuZmlndXJlLnNuaXAxMDg0IGEge1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbn1cblxuZmlndXJlLnNuaXAxMDg0LmJsdWUge1xuICBiYWNrZ3JvdW5kOiAjMGEyMTJmO1xufVxuXG5maWd1cmUuc25pcDEwODQucmVkIHtcbiAgYmFja2dyb3VuZDogIzM2MTAwYztcbn1cblxuZmlndXJlLnNuaXAxMDg0LnllbGxvdyB7XG4gIGJhY2tncm91bmQ6ICM1NjJlMGE7XG59XG5cbmZpZ3VyZS5zbmlwMTA4NDpob3ZlciBpbWcsXG5maWd1cmUuc25pcDEwODQuaG92ZXIgaW1nIHtcbiAgb3BhY2l0eTogMC4yO1xuICAtd2Via2l0LWZpbHRlcjogYmx1cig1cHgpO1xuICBmaWx0ZXI6IGJsdXIoNXB4KTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cblxuZmlndXJlLnNuaXAxMDg0OmhvdmVyIGZpZ2NhcHRpb24gaDIsXG5maWd1cmUuc25pcDEwODQuaG92ZXIgZmlnY2FwdGlvbiBoMixcbmZpZ3VyZS5zbmlwMTA4NDpob3ZlciBmaWdjYXB0aW9uIHAsXG5maWd1cmUuc25pcDEwODQuaG92ZXIgZmlnY2FwdGlvbiBwIHtcbiAgb3BhY2l0eTogMTtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTogMC4ycztcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4ycztcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbn1cblxuZmlndXJlLnNuaXAxMDg0OmhvdmVyIGZpZ2NhcHRpb24gcCxcbmZpZ3VyZS5zbmlwMTA4NC5ob3ZlciBmaWdjYXB0aW9uIHAge1xuICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDAuM3M7XG4gIHRyYW5zaXRpb24tZGVsYXk6IDAuM3M7XG59XG5cbmZpZ3VyZS5zbmlwMTA4NDpob3ZlcjpiZWZvcmUsXG5maWd1cmUuc25pcDEwODQuaG92ZXI6YmVmb3JlLFxuZmlndXJlLnNuaXAxMDg0OmhvdmVyOmFmdGVyLFxuZmlndXJlLnNuaXAxMDg0LmhvdmVyOmFmdGVyIHtcbiAgb3BhY2l0eTogMC44O1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbi8qIFBPUlRGT0xJTyAqL1xuLnBvcnRmb2xpbyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwMDAzMjtcbiAgcGFkZGluZzogMjBweDtcbiAgcGFkZGluZy10b3A6IDgwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5wb3J0Zm9saW9fX2hlYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDIwcHg7XG59XG5cbi5wb3J0Zm9saW9fX2hlYWRlcjo6YWZ0ZXIsIC5wb3J0Zm9saW9fX2hlYWRlcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwMDAzMjtcbn1cblxuLnBvcnRmb2xpb19fYm94IHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogNDAwcHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMzBweCAycHggI2U2ZTZlODtcbiAgbWFyZ2luOiA1cHg7XG59XG5cbi5ib3hfX2NvbnRlbnQge1xuICBmbGV4LWJhc2lzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogNXB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5ib3hfX25hbWUge1xuICBmb250LXNpemU6IDJyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogNDBweCBhdXRvO1xufVxuXG4uYm94X19saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgd2lkdGg6IDUwcHg7XG4gIG1hcmdpbjogMTBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU4O1xuICBjb2xvcjogIzMwMDAzMjtcbiAgdHJhbnNpdGlvbjogLjZzO1xufVxuXG4uYm94X19saW5rOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTUlO1xuICBib3JkZXItcmFkaXVzOiA0NSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gIG9wYWNpdHk6IDAuNDtcbiAgYm90dG9tOiAtMTBweDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRyYW5zaXRpb246IC42cztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5ib3hfX2xpbms6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59XG5cbi5ib3hfX2xpbms6aG92ZXI6YWZ0ZXIge1xuICBvcGFjaXR5OiAwLjI7XG4gIGJvdHRvbTogLTEycHg7XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYm94X19kZXNjcmlwdGlvbiB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDYwMDBhO1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxuLmRlc2NyaXB0aW9uX19jb250ZW50IHtcbiAgYWxpZ24tdGV4dDogY2VudGVyO1xufVxuXG4uYm94X19pY29ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4ucG9ydGZvbGlvX19pY29uIHtcbiAgbWFyZ2luOiA1cHg7XG59XG5cbi8qIEtPTlRBS1QgKi9cbi5jb250YWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU4O1xuICBjb2xvcjogIzMwMDAzMjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgcGFkZGluZy10b3A6IDcwcHg7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuXG4uY29udGFjdF9faGVhZGVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjMzAwMDMyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiAyMHB4O1xufVxuXG4uY29udGFjdF9faGVhZGVyOjphZnRlciwgLmNvbnRhY3RfX2hlYWRlcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlODtcbn1cblxuLmNvbnRhY3RfX21ldGhvZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubWV0aG9kX19tYWlsIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG4ubWV0aG9kX19zb2NpYWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWFyZ2luOiAxMHB4O1xuICBwYWRkaW5nOiAwO1xufVxuXG4uc29jaWFsX19lbGVtIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zb2NpYWxfX2hlYWRlciB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogNXB4O1xufVxuXG4uc29jaWFsX19pY29uIHtcbiAgZm9udC1zaXplOiAyLjVyZW07XG59XG5cbiNtYXAge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcbn1cblxuLyogRk9PVEVSICovXG4ucGFnZV9fZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwMDAzMjtcbiAgaGVpZ2h0OiBhdXRvO1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxuLmZvb3Rlcl9fY29udGVudCB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZTZlNmU4O1xufVxuXG4uaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2Ny4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxyXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXHJcbiAqL1xyXG5cclxuaHRtbCB7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBTZWN0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cclxuXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxubmF2LFxyXG5zZWN0aW9uIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5oMSB7XHJcbiAgZm9udC1zaXplOiAyZW07XHJcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcclxufVxyXG5cclxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cclxuICovXHJcblxyXG5maWdjYXB0aW9uLFxyXG5maWd1cmUsXHJcbm1haW4geyAvKiAxICovXHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXHJcbiAqL1xyXG5cclxuZmlndXJlIHtcclxuICBtYXJnaW46IDFlbSA0MHB4O1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xyXG5cclxuaHIge1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgaGVpZ2h0OiAwOyAvKiAxICovXHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5wcmUge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXHJcbiAqL1xyXG5cclxuYSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cclxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LSBhbmQgRmlyZWZveCAzOS0uXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYWJiclt0aXRsZV0ge1xyXG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXHJcbiAqL1xyXG5cclxuYixcclxuc3Ryb25nIHtcclxuICBmb250LXdlaWdodDogaW5oZXJpdDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYixcclxuc3Ryb25nIHtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cclxuICovXHJcblxyXG5kZm4ge1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cclxuICovXHJcblxyXG5tYXJrIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xyXG4gIGNvbG9yOiAjMDAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc21hbGwge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgZm9udC1zaXplOiA3NSU7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3ViIHtcclxuICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgdG9wOiAtMC41ZW07XHJcbn1cclxuXHJcbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICovXHJcblxyXG5hdWRpbyxcclxudmlkZW8ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXHJcbiAqL1xyXG5cclxuYXVkaW86bm90KFtjb250cm9sc10pIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxyXG4gKi9cclxuXHJcbmltZyB7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqL1xyXG5cclxuc3ZnOm5vdCg6cm9vdCkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgbWFyZ2luOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0IHsgLyogMSAqL1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXHJcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7IC8qIDEgKi9cclxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXHJcblt0eXBlPVwicmVzZXRcIl0sXHJcblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xyXG5cclxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xyXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XHJcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmxlZ2VuZCB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXHJcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cclxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAzICovXHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxucHJvZ3Jlc3Mge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cclxuICovXHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXHJcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJjaGVja2JveFwiXSxcclxuW3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cclxuICovXHJcblxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXHJcblxyXG5bdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICovXHJcblxyXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXHJcblxyXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xyXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyogSW50ZXJhY3RpdmVcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuZGV0YWlscywgLyogMSAqL1xyXG5tZW51IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnN1bW1hcnkge1xyXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcclxufVxyXG5cclxuLyogU2NyaXB0aW5nXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxuY2FudmFzIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cclxuICovXHJcblxyXG50ZW1wbGF0ZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogSGlkZGVuXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxyXG4gKi9cclxuXHJcbltoaWRkZW5dIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59IiwiQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdmb250ZWxsbyc7XHJcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL2ZvbnRlbGxvLmVvdD81OTQ5MjgyMicpO1xyXG4gIHNyYzogdXJsKCcuLi9mb250cy9mb250ZWxsby5lb3Q/NTk0OTI4MjIjaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICAgICB1cmwoJy4uL2ZvbnRzL2ZvbnRlbGxvLndvZmYyPzU5NDkyODIyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgdXJsKCcuLi9mb250cy9mb250ZWxsby53b2ZmPzU5NDkyODIyJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICB1cmwoJy4uL2ZvbnRzL2ZvbnRlbGxvLnR0Zj81OTQ5MjgyMicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuICAgICAgIHVybCgnLi4vZm9udHMvZm9udGVsbG8uc3ZnPzU5NDkyODIyI2ZvbnRlbGxvJykgZm9ybWF0KCdzdmcnKTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG4vKiBDaHJvbWUgaGFjazogU1ZHIGlzIHJlbmRlcmVkIG1vcmUgc21vb3RoIGluIFdpbmRvenplLiAxMDAlIG1hZ2ljLCB1bmNvbW1lbnQgaWYgeW91IG5lZWQgaXQuICovXHJcbi8qIE5vdGUsIHRoYXQgd2lsbCBicmVhayBoaW50aW5nISBJbiBvdGhlciBPUy1lcyBmb250IHdpbGwgYmUgbm90IGFzIHNoYXJwIGFzIGl0IGNvdWxkIGJlICovXHJcbi8qXHJcbkBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MCkge1xyXG4gIEBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdmb250ZWxsbyc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udC9mb250ZWxsby5zdmc/NTk0OTI4MjIjZm9udGVsbG8nKSBmb3JtYXQoJ3N2ZycpO1xyXG4gIH1cclxufVxyXG4qL1xyXG4gXHJcbltjbGFzc149XCJpY29uLVwiXTpiZWZvcmUsIFtjbGFzcyo9XCIgaWNvbi1cIl06YmVmb3JlIHtcclxuICBmb250LWZhbWlseTogXCJmb250ZWxsb1wiO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIHNwZWFrOiBub25lO1xyXG4gXHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcclxuICB3aWR0aDogMWVtO1xyXG4gIG1hcmdpbi1yaWdodDogLjJlbTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgLyogb3BhY2l0eTogLjg7ICovXHJcbiBcclxuICAvKiBGb3Igc2FmZXR5IC0gcmVzZXQgcGFyZW50IHN0eWxlcywgdGhhdCBjYW4gYnJlYWsgZ2x5cGggY29kZXMqL1xyXG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gXHJcbiAgLyogZml4IGJ1dHRvbnMgaGVpZ2h0LCBmb3IgdHdpdHRlciBib290c3RyYXAgKi9cclxuICBsaW5lLWhlaWdodDogMWVtO1xyXG4gXHJcbiAgLyogQW5pbWF0aW9uIGNlbnRlciBjb21wZW5zYXRpb24gLSBtYXJnaW5zIHNob3VsZCBiZSBzeW1tZXRyaWMgKi9cclxuICAvKiByZW1vdmUgaWYgbm90IG5lZWRlZCAqL1xyXG4gIG1hcmdpbi1sZWZ0OiAuMmVtO1xyXG4gXHJcbiAgLyogeW91IGNhbiBiZSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggaW5jcmVhc2VkIGljb25zIHNpemUgKi9cclxuICAvKiBmb250LXNpemU6IDEyMCU7ICovXHJcbiBcclxuICAvKiBGb250IHNtb290aGluZy4gVGhhdCB3YXMgdGFrZW4gZnJvbSBUV0JTICovXHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcclxuIFxyXG4gIC8qIFVuY29tbWVudCBmb3IgM0QgZWZmZWN0ICovXHJcbiAgLyogdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMTI3LCAxMjcsIDEyNywgMC4zKTsgKi9cclxufVxyXG4gXHJcbi5pY29uLXNlYXJjaDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODAwJzsgfSAvKiAn7qCAJyAqL1xyXG4uaWNvbi1kb3duLW9wZW46YmVmb3JlIHsgY29udGVudDogJ1xcZTgwMSc7IH0gLyogJ+6ggScgKi9cclxuLmljb24tbG9jYXRpb24taW52OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MDInOyB9IC8qICfuoIInICovXHJcbi5pY29uLXJpZ2h0LW9wZW46YmVmb3JlIHsgY29udGVudDogJ1xcZTgwMyc7IH0gLyogJ+6ggycgKi9cclxuLmljb24tbWFpbDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODA0JzsgfSAvKiAn7qCEJyAqL1xyXG4uaWNvbi1tZW51OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MDUnOyB9IC8qICfuoIUnICovXHJcbi5pY29uLWNhbmNlbDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODA2JzsgfSAvKiAn7qCGJyAqL1xyXG4uaWNvbi1naXRodWItY2lyY2xlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxmMDliJzsgfSAvKiAn74KbJyAqL1xyXG4uaWNvbi1jb2RlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGYxMjEnOyB9IC8qICfvhKEnICovXHJcbi5pY29uLWxpbmtlZGluLXNxdWFyZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZjMwYyc7IH0gLyogJ++MjCcgKi8iLCIkY29sb3ItMTogI2ZmZmZmZjtcclxuJGNvbG9yLTI6ICMzMDAwMzI7XHJcbiRjb2xvci0zOiMwNjAwMGE7XHJcbiRjb2xvci00OiNjNDMyMzU7XHJcbiRjb2xvci01OiNlNmU2ZTg7XHJcblxyXG4kcHAxOiAyMHB4O1xyXG5cclxuJGZvbnQtMTonTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiRmb250LTI6J0xhdG8nLCBzYW5zLXNlcmlmO1xyXG5cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LTI7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItMjtcclxuICAgIC8vIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBjb2xvcjogJGNvbG9yLTU7XHJcblxyXG59XHJcblxyXG4uc2VjdGlvbl9faGVhZGVyIHtcclxuICAgIC8vIGZsZXgtYmFzaXM6MTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC0xO1xyXG4gICAgZm9udC1zaXplOiAyLjByZW07XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOjIwcHggMDtcclxuICAgIG1pbi13aWR0aDoyMDBweDtcclxuICAgIG1heC13aWR0aDozMDBweDtcclxuICAgIHBhZGRpbmc6IDVweCAwO1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgJGNvbG9yLTU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOjVweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcclxuXHJcbiAgICAmOjphZnRlcixcclxuICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItMztcclxuICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBib3R0b206IC0zcHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgfVxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICB0b3A6IC0zcHg7XHJcbiAgICAgICAgcmlnaHR0OiA1MCU7XHJcbiAgICB9XHJcbn1cclxuJG1haW4tdG9wOjYwcHg7XHJcblxyXG4ucGFnZV9fbWFpbntcclxuXHRwYWRkaW5nLXRvcDokbWFpbi10b3A7XHJcbn1cclxuLmJ0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yLTU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4ucGFnZV9fbGlua3tcclxuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbiAgICBjb2xvcjokY29sb3ItMTtcclxuICAgIHBhZGRpbmc6MTBweDtcclxuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuNXM7XHJcblxyXG4gICAgJjo6YmVmb3Jle1xyXG4gICAgY29udGVudDonJztcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgaGVpZ2h0OjJweDtcclxuICAgIGxlZnQ6MDtcclxuICAgIGJvdHRvbTo1cHg7XHJcbiAgICByaWdodDowO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjokY29sb3ItMjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjVzO1xyXG4gICAgXHJcbiAgICB9XHJcbn1cclxuLnBhZ2VfX2xpbms6aG92ZXI6OmJlZm9yZXtcclxuICAgIHdpZHRoOjA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cztcclxufVxyXG4vKiBtZWRpYSBxdWVyeSAqL1xyXG5cclxuJGJyZWFrcG9pbnRzOiAoIFwicGhvbmVcIjogNDAwcHgsXHJcblwicGhvbmUtd2lkZVwiOiA0NjVweCxcclxuXCJwaGFibGV0XCI6IDU2MHB4LFxyXG5cInRhYmxldC1zbWFsbFwiOiA2NDBweCxcclxuXCJ0YWJsZXRcIjogNzY4cHgsXHJcblwidGFibGV0LXdpZGVcIjogMTAyNHB4LFxyXG5cImRlc2t0b3BcIjogMTI0OHB4LFxyXG5cImRlc2t0b3Atd2lkZVwiOiAxNDQwcHgpO1xyXG5cclxuQG1peGluIG1xKCR3aWR0aCwgJHR5cGU6IG1pbikge1xyXG4gICAgQGlmIG1hcF9oYXNfa2V5KCRicmVha3BvaW50cywgJHdpZHRoKSB7XHJcbiAgICAgICAgJHdpZHRoOiBtYXBfZ2V0KCRicmVha3BvaW50cywgJHdpZHRoKTtcclxuICAgICAgICBAaWYgJHR5cGU9PW1heCB7XHJcbiAgICAgICAgICAgICR3aWR0aDogJHdpZHRoIC0gMXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyR0eXBlfS13aWR0aDogJHdpZHRoKSB7XHJcbiAgICAgICAgICAgIEBjb250ZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4vLyBMT0FERVIgTklFIERPREFOWSBKRVNaQ1pFXHJcblxyXG4jbG9hZGVyLXdyYXBwZXJ7XHJcbnBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgei1pbmRleDogMTAwMDtcclxuICBiYWNrZ3JvdW5kOiAkY29sb3ItNTtcclxuICAvKiBkaXNwbGF5OiBub25lOyAqL1xyXG59XHJcblxyXG4ubG9hZHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xlZnQ6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgLypjaGFuZ2UgdGhlc2Ugc2l6ZXMgdG8gZml0IGludG8geW91ciBwcm9qZWN0Ki9cclxuICB3aWR0aDoxMDBweDtcclxuICBoZWlnaHQ6MTAwcHg7XHJcbn1cclxuLmxvYWQgaHJ7Ym9yZGVyOjA7bWFyZ2luOjA7d2lkdGg6NDAlO2hlaWdodDo0MCU7cG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyLXJhZGl1czo1MCU7YW5pbWF0aW9uOnNwaW4gMnMgZWFzZSBpbmZpbml0ZX1cclxuXHJcbi5sb2FkIDpmaXJzdC1jaGlsZHtiYWNrZ3JvdW5kOiRjb2xvci0xO2FuaW1hdGlvbi1kZWxheTotMS41c31cclxuLmxvYWQgOm50aC1jaGlsZCgyKXtiYWNrZ3JvdW5kOiRjb2xvci0zO2FuaW1hdGlvbi1kZWxheTotMXN9XHJcbi5sb2FkIDpudGgtY2hpbGQoMyl7YmFja2dyb3VuZDokY29sb3ItMjthbmltYXRpb24tZGVsYXk6LTAuNXN9XHJcbi5sb2FkIDpsYXN0LWNoaWxke2JhY2tncm91bmQ6JGNvbG9yLTR9XHJcblxyXG5Aa2V5ZnJhbWVzIHNwaW57XHJcbiAgMCUsMTAwJXt0cmFuc2Zvcm06dHJhbnNsYXRlKDApfVxyXG4gIDI1JXt0cmFuc2Zvcm06dHJhbnNsYXRlKDE2MCUpfVxyXG4gIDUwJXt0cmFuc2Zvcm06dHJhbnNsYXRlKDE2MCUsIDE2MCUpfVxyXG4gIDc1JXt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIDE2MCUpfVxyXG59XHJcblxyXG5cclxuaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDYyLjUlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuICAgIEBpbmNsdWRlIG1xKDQ2MHB4LG1pbil7XHJcbiAgICAgICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4iLCIvLyBoZWFkZXJzIHN0eWxlXHJcbi5wYWdlX19oZWFkZXIge1xyXG5iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgyMzAsMjMwLDIzMiwwKSAwJSwgcmdiYSgxMzAsMTAzLDEzMiwwLjgpIDglLCByZ2JhKDQ4LDAsNTAsMSkgNTElKTsgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgaGVpZ2h0OiAkbWFpbi10b3A7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBmbGV4LXdyYXA6IG5vLXdyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtcclxuICAgIGNvbG9yOiAkY29sb3ItMTtcclxuICAgIHBhZGRpbmc6MHB4IDIwcHg7XHJcbn1cclxuXHJcbi5wYWdlX19uYW1lIHtcclxuICAgIC50cmltIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVhZGVyX19uYXYge1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubmF2X19oYW1idXJnZXIge1xyXG4gICAgQGV4dGVuZCAuYnRuO1xyXG4gICAgXHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIGNvbG9yOiAkY29sb3ItNTtcclxuICAgICAgICBcclxuXHJcbiAgICAmOmZvY3Vzfi5uYXZfX2xpc3Qge1xyXG4gICAgdHJhbnNmb3JtOnNjYWxlWCgxKTtcclxuICAgICAgICAgICAgXHJcbiAgICB9XHJcbn1cclxuXHJcbi5uYXZfX2xpc3Qge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcmlnaHQ6IC0yMHB4O1xyXG4gICAgdG9wOiA0NHB4O1xyXG4gICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSg0OCwwLDUwLDEpIDAlLCByZ2JhKDEzMCwxMDMsMTMyLDAuNSkgOTUlLCByZ2JhKDIzMCwyMzAsMjMyLDApIDQ5JSk7ICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAwcHggMjBweCAzMHB4IDUwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTAwJTtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDElO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0O1xyXG4gICAgdHJhbnNmb3JtOnNjYWxlWCgwKTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjVzO1xyXG5cclxufVxyXG5cclxuLmxpc3RfX2VsZW0ge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG59XHJcblxyXG4uZWxlbV9fbGluayB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgY29sb3I6ICRjb2xvci01O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbn0iLCIuYmFubmVyIHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtICN7JG1haW4tdG9wfSk7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgIFxyXG4mOjphZnRlcntcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9zbGlkZXIvOC5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246NTAlIDUwJTtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcbiAgb3BhY2l0eTogMC41O1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICByaWdodDogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgei1pbmRleDogLTE7IFxyXG4gIGZpbHRlcjpvcGFjaXR5KDgwJSk7XHJcbn1cclxuXHJcbn1cclxuXHJcbi5iYW5uZXJfX3dyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgLy8gaGVpZ2h0OjFweDtcclxuICAgIHdpZHRoOjBweDtcclxuICAgIGhlaWdodDowcHg7XHJcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xyXG4gICAgYW5pbWF0aW9uOiBzaG93IDJzIGN1YmljLWJlemllciguNTEsLjQ2LC40NiwuNzYpO1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OjJzO1xyXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkcztcclxuICAgIGNvbG9yOiRjb2xvci0xO1xyXG4gICAgXHJcbn1cclxuXHJcblxyXG4uYmFubmVyX19oZWFkZXIge1xyXG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IDRyZW07XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDByZW07XHJcbiAgICBtYXJnaW46IDA7XHJcblxyXG5cclxuICAgICY6OmFmdGVyLFxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci0xO1xyXG4gICAgfVxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGJvdHRvbTogLTlweDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICB0b3A6IC05cHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgIH1cclxufVxyXG5cclxuLmJhbm5lcl9fd29ya3BsYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbiAgICB6LWluZGV4OiAzO1xyXG4gICAgaGVpZ2h0OjBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogMDsgLy8gYm90dG9tOiA0MCU7XHJcbiAgICB3aWR0aDowcHg7XHJcbiAgICBwYWRkaW5nOiA1cHggMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIGxpbmUtaGVpZ2h0OjJyZW07XHJcbiAgICByaWdodDogMDtcclxuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLTQ7XHJcbiAgICBjb2xvcjokY29sb3ItMjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBhbmltYXRpb246IHNob3cyIDJzIGN1YmljLWJlemllciguOTEsLjQ2LC40NiwuNzYpO1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OjRzO1xyXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIFxyXG5cclxufVxyXG5cclxuLmJhbm5lcl9faW5mb3tcclxuZm9udC1zaXplOjMuNXJlbTtcclxudGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xyXG50ZXh0LXNoYWRvdzoxcHggMXB4IDVweCAgcmVkO1xyXG59XHJcbi5iYW5uZXJfX3N0YXJ0IHtcclxuICAgIEBleHRlbmQgLmJ0bjtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxufVxyXG5cclxuXHJcbkBrZXlmcmFtZXMgc2hvdyB7XHJcbiAgICAwJSB7ICAgIHdpZHRoOjJweDtcclxuICAgICAgICAgICAgaGVpZ2h0OjJweDsgXHJcbiAgICAvKmNvbG9yOiRjb2xvci00OyovXHJcbiAgICB9XHJcbiAgICAyNSUgeyBoZWlnaHQ6MnB4O1xyXG4gICAgLypjb2xvcjokY29sb3ItNDsqL1xyXG4gICAgfVxyXG4gICAgNzUlIHsgaGVpZ2h0OjJweDtcclxuICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgLypjb2xvcjokY29sb3ItNDsqL1xyXG4gICAgfVxyXG4gICAgMTAwJSB7IHdpZHRoOjEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OjEyMHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OjZyZW07XHJcbi8qY29sb3I6JGNvbG9yLTQ7Ki9cclxuICAgIH1cclxufVxyXG5Aa2V5ZnJhbWVzIHNob3cyIHtcclxuICAgIDAlIHsgICAgd2lkdGg6MnB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6MS44cmVtOyBcclxuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cclxuICAgIH1cclxuICAgIDI1JSB7IGhlaWdodDoxLjhyZW07XHJcbiAgICAvKmNvbG9yOiRjb2xvci00OyovXHJcbiAgICB9XHJcbiAgICA3NSUgeyBoZWlnaHQ6MS44cmVtO1xyXG4gICAgICAgIHdpZHRoOjkwJTtcclxuICAgIC8qY29sb3I6JGNvbG9yLTQ7Ki9cclxuICAgIH1cclxuICAgIDEwMCUgeyB3aWR0aDo5MCU7XHJcbiAgICAgICAgaGVpZ2h0OjEuOHJlbTtcclxuLypjb2xvcjokY29sb3ItNDsqL1xyXG4gICAgfVxyXG59IiwiLyogQUJPVVQgKi9cclxuLmFib3V0e1xyXG4gIGJhY2tncm91bmQtY29sb3I6JGNvbG9yLTM7XHJcbiAgcGFkZGluZzoyMHB4O1xyXG4gIGNvbG9yOiRjb2xvci00O1xyXG59XHJcbi5hYm91dF9faGVhZGVye1xyXG4gIEBpbmNsdWRlIHNIZWFkZXIoJGNvbG9yLTQsICRjb2xvci0zKTtcclxufVxyXG4uYWJvdXRfX3Byb2ZpbGV7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvcHJvZmlsZS5qcGcnKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjp0b3A7XHJcbiAgd2lkdGg6MjAwcHg7XHJcbiAgaGVpZ2h0OjIyMHB4O1xyXG4gIC8vIGJvcmRlci1yYWRpdXM6NTAlO1xyXG4gICBtYXJnaW46MCBhdXRvO1xyXG4gICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDAlLCAxMDAlIDAsIDEwMCUgNzUlLCA1MCUgMTAwJSwgMCUgNzUlLCAwIDApO1xyXG59XHJcbi5wcm9maWxlX19jb250ZW50e1xyXG4gIGZvbnQtc2l6ZToxLjVyZW07XHJcbiAgbGV0dGVyLXNwYWNpbmc6MXB4O1xyXG4gIHRleHQtYWxpZ246anVzdGlmeTtcclxuICBsaW5lLWhlaWdodDoxLjhyZW07XHJcbiAgdGV4dC1pbmRlbnQ6IDMwcHg7XHJcbiAgICAgIG1heC13aWR0aDoxMjAwcHg7XHJcbiAgICBtYXJnaW46MCBhdXRvO1xyXG5cclxufVxyXG4uYWJvdXRfX2NvdXJzZXN7XHJcblxyXG5cclxufVxyXG4uY291cnNlc19faGVhZGVye1xyXG5mb250LXNpemU6Mi4wcmVtO1xyXG50ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XHJcbm1hcmdpbjoxMHB4IDA7XHJcbmNvbG9yOiRjb2xvci01O1xyXG59XHJcbi5jb3Vyc2VzX19saXN0e1xyXG5saXN0LXN0eWxlLXR5cGU6bm9uZTtcclxucGFkZGluZzo1cHg7XHJcbn1cclxuLmNvdXJzZXNfX2VsZW17XHJcbmZvbnQtc2l6ZToxLjVyZW07XHJcbmxpbmUtaGVpZ2h0OjEuOHJlbTtcclxubWFyZ2luLWJvdHRvbTo1cHg7XHJcbn1cclxuXHJcbi8qIEhPQkJZICovXHJcbi5hYm91dF9faG9iYnl7XHJcbmRpc3BsYXk6ZmxleDtcclxuZmxleC13cmFwOndyYXA7XHJcbmp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcbn1cclxuLmhvYmJ5X19oZWFkZXJ7XHJcbiAgZm9udC1zaXplOjIuMHJlbTtcclxudGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xyXG5tYXJnaW46MTBweCAwO1xyXG5jb2xvcjokY29sb3ItNTtcclxud2lkdGg6MTAwJTtcclxufVxyXG4uc2xpZGVye1xyXG4gIC8vIGRpc3BsYXk6ZmxleDtcclxuICAvLyBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtcclxuICAvLyBhbGlnbi1pdGVtczpjZW50ZXI7XHJcbiAgLy8gZmxleC1kaXJlY3Rpb246cm93O1xyXG4gIC8vIGZsZXgtd3JhcDpub3dyYXA7XHJcbiAgLy8gb3ZlcmZsb3c6aGlkZGVuO1xyXG4gIC8vIHBhZGRpbmc6MDtcclxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICB3aWR0aDoxMDAlO1xyXG4gIGhlaWdodDoyMDBweDtcclxuIG92ZXJmbG93OmhpZGRlbjtcclxuXHJcbn1cclxuLnNsaWRlcl9fbGlzdHtcclxuIC8vIGRpc3BsYXk6ZmxleDtcclxuIC8vIGxpc3Qtc3R5bGU6bm9uZTtcclxuIC8vIHBhZGRpbmc6MDtcclxuIC8vIHdpZHRoOjM1MHB4O1xyXG4gLy8gaGVpZ2h0OjQwMHB4O1xyXG4gLy8gcG9zaXRpb246cmVsYXRpdmU7XHJcbiAvLyBsZWZ0Oi01MHB4O1xyXG4gLy8gIGxpc3Qtc3R5bGUtdHlwZTpub25lO1xyXG4gZGlzcGxheTpmbGV4O1xyXG4gbGlzdC1zdHlsZTpub25lO1xyXG4gcGFkZGluZzowO1xyXG4gd2lkdGg6MTAwJTtcclxuIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gLy8gbGVmdDotNTBweDtcclxuIHRyYW5zaXRpb246IC41cyBlYXNlLWluLW91dDtcclxufVxyXG4uc2xpZGVyX19lbGVte1xyXG4gZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiB3aWR0aDozNTBweDtcclxuIG9yZGVyOjI7XHJcbnRyYW5zaXRpb246IC41cyBlYXNlLWluLW91dDtcclxuICYtZmlyc3R7XHJcbiAgb3JkZXI6MTtcclxuICB3aWR0aDozNTBweDtcclxuICB0cmFuc2l0aW9uOiAuNXMgZWFzZS1pbi1vdXQ7XHJcblxyXG4gfVxyXG59XHJcblxyXG4uc2xpZGVyX19pbWd7XHJcbiAgd2lkdGg6MzAwcHg7XHJcbiAgLy8gaGVpZ2h0OmF1dG87XHJcbiAgdHJhbnNpdGlvbjogLjVzIGVhc2UtaW4tb3V0O1xyXG5cclxufVxyXG4uc2xpZGVyX19idG57XHJcbiAgei1pbmRleDoyO1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICBjb2xvcjp3aGl0ZTtcclxuICAgZm9udC1zaXplOjEuNHJlbTtcclxuICAgYm9yZGVyOm5vbmU7XHJcbiAgIHRyYW5zaXRpb246MC41cztcclxuICAmOmhvdmVye1xyXG4gICAgdHJhbnNmb3JtOnNjYWxlKDEuMik7XHJcbiAgfVxyXG4gICYtLW5leHR7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgIHJpZ2h0OjA7XHJcbiAgIHRvcDo1MCU7XHJcbiAgICBcclxuICB9XHJcbiAgJi0tcHJldntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6MDtcclxuICAgIHRvcDo1MCU7XHJcbiAgfVxyXG59XHJcblxyXG4uaXMtc3RlYWR5e1xyXG4gdHJhbnNmb3JtOm5vbmU7XHJcbiB0cmFuc2l0aW9uOnRyYW5zZm9ybSAxcyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLmlzLWJhY2t7XHJcbiAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTMwMHB4KTtcclxufSIsIi8vIC8qIG1peGlucyAqL1xyXG5cclxuQG1peGluIHNIZWFkZXIoJGNUZXh0LCAkY0JHKSB7XHJcblx0IHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAkY1RleHQ7XHJcbiAgICBmb250LXNpemU6IDIuMHJlbTtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBjb2xvcjokY1RleHQ7XHJcbiAgICBtYXJnaW46MjBweCAwO1xyXG4gICAgbWluLXdpZHRoOjIwMHB4O1xyXG4gICAgbWF4LXdpZHRoOjMwMHB4O1xyXG4gICAgcGFkZGluZzogNXB4IDA7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCAkY1RleHQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOjVweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcclxuXHJcbiAgICAmOjphZnRlcixcclxuICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY0JHO1xyXG4gICAgICAgIHdpZHRoOiAzMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGJvdHRvbTogLTNweDtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICB9XHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIHRvcDogLTNweDtcclxuICAgICAgICByaWdodHQ6IDUwJTtcclxuICAgIH1cclxufVxyXG4vLyBAbWl4aW4gYXJyb3coJGRpcmVjdGlvbikge1xyXG4vLyAgICAgJjo6YWZ0ZXIge1xyXG4vLyAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbi8vICAgICAgICAgbWFyZ2luOjBweCA1cHg7XHJcbi8vICAgICAgICAgYm9yZGVyOiBzb2xpZCBibGFjaztcclxuLy8gICAgICAgICBib3JkZXItd2lkdGg6IDAgM3B4IDNweCAwO1xyXG4vLyAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuLy8gICAgICAgICBwYWRkaW5nOiAzcHg7XHJcbi8vICAgICB9XHJcbi8vICAgICBAaWYgJGRpcmVjdGlvbj09dXAge1xyXG4vLyAgICAgICAgICY6OmFmdGVyIHtcclxuLy8gICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTEzNWRlZyk7XHJcbi8vICAgICAgICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTEzNWRlZyk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyAgICAgIEBpZiAkZGlyZWN0aW9uPT1kb3duIHtcclxuLy8gICAgICAgICAmOjphZnRlciB7XHJcbi8vICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbi8vICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vICAgICBAaWYgJGRpcmVjdGlvbj09bGVmdCB7XHJcbi8vICAgICAgICAgJjo6YWZ0ZXIge1xyXG4vLyAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcclxuLy8gICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vICAgICBAaWYgJGRpcmVjdGlvbj09cmlnaHQge1xyXG4vLyAgICAgICAgICY6OmFmdGVyIHtcclxuLy8gICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbi8vICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyB9XHJcblxyXG5cclxuXHJcbiIsIi8qIFNLSUxMUyAqL1xyXG5cclxuLnNraWxsc3tcclxucGFkZGluZzoxMHB4IDEwcHggMzAlIDEwcHg7XHJcbmJhY2tncm91bmQtY29sb3I6JGNvbG9yLTI7XHJcbnBvc2l0aW9uOiByZWxhdGl2ZTtcclxub3ZlcmZsb3c6aGlkZGVuO1xyXG5cclxufVxyXG4uaGVhZGVyX19iZyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgbGVmdDogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjokY29sb3ItNTtcclxuY2xpcC1wYXRoOiBwb2x5Z29uKDQ5JSAwLCAxMDAlIDAsIDEwMCUgOTAlLCA1MCUgMTAwJSwgMCA5MCUsIDAgMCk7XHJcblxyXG59XHJcblxyXG5cclxuXHJcbi5za2lsbHNfX2hlYWRlcntcclxuICBAaW5jbHVkZSBzSGVhZGVyKCRjb2xvci00LCAkY29sb3ItNSk7XHJcbn1cclxuLnNraWxsc19fbGlzdHtcclxuICBkaXNwbGF5OmdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCAxMDBweCk7XHJcbiAgd2lkdGg6MTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGdyaWQtZ2FwOjEwcHg7XHJcbi8vIGRpc3BsYXk6ZmxleDtcclxuLy8ganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuLy8gZmxleC1kaXJlY3Rpb246cm93O1xyXG4vLyBmbGV4LXdyYXA6d3JhcDtcclxucGFkZGluZzowO1xyXG5cclxufVxyXG4uc2tpbGxzX19lbGVte1xyXG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG5saXN0LXN0eWxlLXR5cGU6bm9uZTtcclxuY29sb3I6JGNvbG9yLTE7XHJcbmRpc3BsYXk6ZmxleDtcclxuanVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuZmxleC13cmFwOndyYXA7XHJcbn1cclxuLnNraWxsc19faWNvbntcclxuICB3aWR0aDoxMDAlO1xyXG4gIGhlaWdodDo5MHB4O1xyXG4gIG1hcmdpbjowO1xyXG59XHJcbi5za2lsbHNfX2ljb24tc217XHJcbiAgd2lkdGg6OTBweDtcclxufVxyXG4uc2tpbGxzX19kZXRhaWxze1xyXG5cclxuZm9udC1zaXplOjEuNXJlbTtcclxuaGVpZ2h0OjgwJTtcclxucGFkZGluZzoxMHB4O1xyXG5cclxuJjo6YWZ0ZXJ7XHJcbiAgY29udGVudDonJztcclxuICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICB0b3A6MDtcclxuICBib3R0b206MDtcclxuICBsZWZ0OjA7XHJcbiAgcmlnaHQ6MDtcclxufVxyXG5cclxufVxyXG4uc2tpbGxzX19jb250ZW50e1xyXG4gIGhlaWdodDo4MCU7XHJcbn1cclxuLnNraWxsc19fYnRue1xyXG5wb3NpdGlvbjphYnNvbHV0ZTtcclxuYm90dG9tOjIwcHg7XHJcbmxlZnQ6NTAlO1xyXG50cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKTtcclxuICBtYXJnaW46MCBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgY29sb3I6ICRjb2xvci0zO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgcGFkZGluZzo1cHg7XHJcblxyXG4mOmJlZm9yZSxcclxuICAmOmFmdGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItMztcclxuICAgIHRyYW5zaXRpb246IGFsbCAuMjVzIDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG5cclxuICB9XHJcbiAgJjpiZWZvcmUge1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICB9XHJcbiAgJjphZnRlciB7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICB9XHJcblxyXG4mOmhvdmVye1xyXG4gICY6YWZ0ZXJ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6MTAlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4yNXMgO1xyXG4gIH1cclxuICAmOmJlZm9yZXtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6MTAlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4yNXMgO1xyXG4gIH1cclxufVxyXG5cclxufSIsIi8qIFBPUlRGT0xJTyAqL1xyXG5cclxuLnBvcnRmb2xpbyB7XHJcbiAgcG9zaXRpb246cmVsYXRpdmU7XHJcblxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLTI7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgcGFkZGluZy10b3A6ODBweDtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcclxuICAgIGZsZXgtd3JhcDp3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcclxuICAgIFxyXG5cclxufVxyXG4ucG9ydGZvbGlvX19oZWFkZXJ7XHJcbiAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgdG9wOjBweDtcclxuICBsZWZ0OjIwcHg7XHJcbiAgJjo6YWZ0ZXIsXHJcbiAgICAgJjo6YmVmb3JlIHtcclxuXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLTI7XHJcblxyXG4gICAgfVxyXG59XHJcbi5wb3J0Zm9saW9fX2xpc3R7XHJcbiAgd2lkdGg6MTAwJTtcclxuICBwYWRkaW5nOjA7XHJcbn1cclxuLnBvcnRmb2xpb19fZWxlbXtcclxuICBsaXN0LXN0eWxlLXR5cGU6bm9uZTtcclxuICBtYXJnaW46MTBweDtcclxufVxyXG4ucG9ydGZvbGlvX193b3Jre1xyXG4gICAgLy8gY29sb3I6ICNmZmY7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbjogMDtcclxuICBtaW4td2lkdGg6IDEyMHB4O1xyXG4gIG1heC13aWR0aDogMzIwcHg7XHJcbiAgbWF4LWhlaWdodDogMzIwcHg7XHJcbiAgLy8gYmFja2dyb3VuZDogIzAwMDAwMDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgei1pbmRleDoxO1xyXG4gICY6YWZ0ZXIsXHJcbiAgJjpiZWZvcmV7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIGNvbnRlbnQ6Jyc7XHJcbiAgICB0b3A6MDtcclxuICAgIGxlZnQ6MDtcclxuICAgIHdpZHRoOjk1JTtcclxuICAgIGhlaWdodDo5MCU7XHJcbiAgICB6LWluZGV4Oi0xO1xyXG4gIH1cclxuICAmOmFmdGVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjokY29sb3ItNDtcclxuICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKDMwcHgpIHRyYW5zbGF0ZVgoMjVweCk7XHJcblxyXG4gIH1cclxuICAmOmJlZm9yZXtcclxuICAgIGJvcmRlcjoxMHB4IHNvbGlkICRjb2xvci00O1xyXG4gIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC0yMHB4KSB0cmFuc2xhdGVYKC0yMHB4KTtcclxuICB9XHJcbiAgJjpob3ZlciAgLndvcmtfX2Rlc2N7XHJcbiAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKTtcclxuICB9XHJcbiAgJjpob3ZlciAgLndvcmtfX2JveHtcclxuICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKDApO1xyXG4gIH1cclxufVxyXG4ud29ya19fZmlne1xyXG4gIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdG9wOiAxMHB4O1xyXG4gIGJvdHRvbToxMHB4O1xyXG4gIGxlZnQ6IDVweDtcclxuICByaWdodDogNXB4O1xyXG4gIHBhZGRpbmc6NXB4O1xyXG4gIC8vIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiRjb2xvci01O1xyXG59XHJcbi53b3JrX19oZWFkZXJ7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzoyMHB4IDA7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMCUpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6cmVkO1xyXG4gIHotaW5kZXg6MztcclxufVxyXG4ud29ya19fZGVzY3tcclxuICB0cmFuc2l0aW9uOjAuNXMgZWFzZS1pbi1vdXQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjpyZWQ7XHJcbiAgcGFkZGluZzoyMHB4IDA7XHJcbnRyYW5zZm9ybTp0cmFuc2xhdGVZKC0yMDAlKTtcclxufVxyXG4ud29ya19faW1ne1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgaGVpZ2h0OmF1dG87XHJcbn1cclxuLndvcmtfX2J0bntcclxucG9zaXRpb246YWJzb2x1dGU7XHJcbmZvbnQtc2l6ZTogMnJlbTtcclxuYm9yZGVyOjFweCBzb2xpZCAkY29sb3ItMTtcclxucGFkZGluZzo1cHg7XHJcbnBhZGRpbmctYm90dG9tOjEwcHg7XHJcbmJvcmRlci1yYWRpdXM6NTAlO1xyXG4mOmhvdmVye1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiRjb2xvci00O1xyXG59XHJcbn1cclxuLndvcmtfX2J0bi1saXZle1xyXG4gIGxlZnQ6NjBweDtcclxufVxyXG4ud29ya19fYnRuLWNvZGV7XHJcbnJpZ2h0OjYwcHg7XHJcbn1cclxuXHJcbi53b3JrX19ib3h7XHJcbiAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjokY29sb3ItNTtcclxuICB3aWR0aDoxMDAlO1xyXG4gIGJvdHRvbTowO1xyXG4gIHRyYW5zZm9ybTp0cmFuc2xhdGVZKDEwMCUpO1xyXG50cmFuc2l0aW9uOjAuNXMgZWFzZS1pbi1vdXQ7XHJcbn1cclxuLndvcmtfX2ljb257XHJcbiAgbWFyZ2luOjVweDtcclxuICB3aWR0aDoyMHB4O1xyXG5cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4ucG9ydGZvbGlvX19ib3gge1xyXG4gICAgbWF4LXdpZHRoOjQwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDMwcHggMnB4ICRjb2xvci01O1xyXG4gICAgbWFyZ2luOjVweDtcclxufVxyXG4jcG9ydGZvbGlvX25hc2F7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ19uYXNhX2FwaS5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XHJcbn1cclxuI3BvcnRmb2xpb190b2Rve1xyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ190b2RvLnBuZycpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xyXG59XHJcbiNwb3J0Zm9saW9fX3d3ZGMxe1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2JnX3d3ZGMxLnBuZycpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xyXG59XHJcbi5ib3hfX2NvbnRlbnQge1xyXG4gICAgZmxleC1iYXNpczo1MCU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgcGFkZGluZzoyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbn1cclxuXHJcbi5ib3hfX25hbWV7XHJcbiAgZm9udC1zaXplOjJyZW07XHJcbnRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcclxuZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcclxubWFyZ2luOiA0MHB4IGF1dG87XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLmJveF9fbGlua3tcclxuICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICBmb250LXNpemU6MnJlbTtcclxuICB0ZXh0LWRlY29yYXRpb246bm9uZTtcclxuICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XHJcbiAgcGFkZGluZzo1cHggMTBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuYm9yZGVyLXJhZGl1czo1cHg7XHJcbiAgd2lkdGg6NTBweDtcclxuICBtYXJnaW46MTBweCAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6JGNvbG9yLTU7XHJcbiAgY29sb3I6JGNvbG9yLTI7XHJcbnRyYW5zaXRpb246IC42cztcclxuXHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTUlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNDUlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRjb2xvci0xLCAyMCUpO1xyXG4gICAgb3BhY2l0eTogMC40O1xyXG4gICAgYm90dG9tOiAtMTBweDtcclxuICAgIGxlZnQ6MDtcclxuICAgIHJpZ2h0OjA7XHJcbiAgICB0cmFuc2l0aW9uOiAuNnM7XHJcbiAgICBtYXJnaW46MCBhdXRvO1xyXG4gIH1cclxuXHJcbiY6aG92ZXJ7XHJcbiAgdHJhbnNmb3JtOnNjYWxlKDEuMSk7XHJcbiAgJjphZnRlciB7XHJcbiAgICBvcGFjaXR5OiAwLjI7XHJcbiAgICBib3R0b206IC0xMnB4O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjowIGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuLmJveF9fZGVzY3JpcHRpb24ge1xyXG4gICAgZmxleC1iYXNpczo1MCU7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci0zO1xyXG4gICAgZm9udC1zaXplOjEuNXJlbTtcclxufVxyXG4uZGVzY3JpcHRpb25fX2NvbnRlbnR7XHJcbiBhbGlnbi10ZXh0OmNlbnRlcjtcclxufVxyXG4uYm94X19pY29uc3tcclxuZGlzcGxheTpmbGV4O1xyXG5qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xyXG59XHJcbi5wb3J0Zm9saW9fX2ljb257XHJcbm1hcmdpbjo1cHg7XHJcbndpZHRoOjMwcHg7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5maWd1cmUuc25pcDEwODQgZmlnY2FwdGlvbiBoMiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBtYXJnaW46IDA7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNzUlKTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNzUlKTtcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0IGZpZ2NhcHRpb24gaDIgc3BhbiB7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0IGZpZ2NhcHRpb24gcCB7XHJcbiAgZm9udC1zaXplOiAwLjllbTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5maWd1cmUuc25pcDEwODQ6YmVmb3JlLFxyXG5maWd1cmUuc25pcDEwODQ6YWZ0ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDIwcHg7XHJcbiAgcmlnaHQ6IDIwcHg7XHJcbiAgYm90dG9tOiAyMHB4O1xyXG4gIGxlZnQ6IDIwcHg7XHJcbiAgY29udGVudDogJyc7XHJcbiAgb3BhY2l0eTogMDtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC42cywgLXdlYmtpdC10cmFuc2Zvcm0gMC42cztcclxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnMsIC13ZWJraXQtdHJhbnNmb3JtIDAuNnMsIC1tb3otdHJhbnNmb3JtIDAuNnMsIC1vLXRyYW5zZm9ybSAwLjZzLCB0cmFuc2Zvcm0gMC42cztcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0OmJlZm9yZSB7XHJcbiAgYm9yZGVyLXRvcDogMXB4IGRvdWJsZSAjZmZmO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBkb3VibGUgI2ZmZjtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCwgMSk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLCAxKTtcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0OmFmdGVyIHtcclxuICBib3JkZXItcmlnaHQ6IDFweCBkb3VibGUgI2ZmZjtcclxuICBib3JkZXItbGVmdDogMXB4IGRvdWJsZSAjZmZmO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEsIDApO1xyXG59XHJcblxyXG5maWd1cmUuc25pcDEwODQgYSB7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG5maWd1cmUuc25pcDEwODQuYmx1ZSB7XHJcbiAgYmFja2dyb3VuZDogIzBhMjEyZjtcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0LnJlZCB7XHJcbiAgYmFja2dyb3VuZDogIzM2MTAwYztcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0LnllbGxvdyB7XHJcbiAgYmFja2dyb3VuZDogIzU2MmUwYTtcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0OmhvdmVyIGltZyxcclxuZmlndXJlLnNuaXAxMDg0LmhvdmVyIGltZyB7XHJcbiAgb3BhY2l0eTogMC4yO1xyXG4gIC13ZWJraXQtZmlsdGVyOiBibHVyKDVweCk7XHJcbiAgZmlsdGVyOiBibHVyKDVweCk7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG59XHJcblxyXG5maWd1cmUuc25pcDEwODQ6aG92ZXIgZmlnY2FwdGlvbiBoMixcclxuZmlndXJlLnNuaXAxMDg0LmhvdmVyIGZpZ2NhcHRpb24gaDIsXHJcbmZpZ3VyZS5zbmlwMTA4NDpob3ZlciBmaWdjYXB0aW9uIHAsXHJcbmZpZ3VyZS5zbmlwMTA4NC5ob3ZlciBmaWdjYXB0aW9uIHAge1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5OiAwLjJzO1xyXG4gIHRyYW5zaXRpb24tZGVsYXk6IDAuMnM7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG59XHJcblxyXG5maWd1cmUuc25pcDEwODQ6aG92ZXIgZmlnY2FwdGlvbiBwLFxyXG5maWd1cmUuc25pcDEwODQuaG92ZXIgZmlnY2FwdGlvbiBwIHtcclxuICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDAuM3M7XHJcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4zcztcclxufVxyXG5cclxuZmlndXJlLnNuaXAxMDg0OmhvdmVyOmJlZm9yZSxcclxuZmlndXJlLnNuaXAxMDg0LmhvdmVyOmJlZm9yZSxcclxuZmlndXJlLnNuaXAxMDg0OmhvdmVyOmFmdGVyLFxyXG5maWd1cmUuc25pcDEwODQuaG92ZXI6YWZ0ZXIge1xyXG4gIG9wYWNpdHk6IDAuODtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxufSIsIlxyXG5cclxuXHJcblxyXG4vKiBQT1JURk9MSU8gKi9cclxuXHJcbi5wb3J0Zm9saW8ge1xyXG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLTI7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgcGFkZGluZy10b3A6ODBweDtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcclxuICAgIGZsZXgtd3JhcDp3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcclxuXHJcbn1cclxuLnBvcnRmb2xpb19faGVhZGVye1xyXG4gIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gIHRvcDowcHg7XHJcbiAgbGVmdDoyMHB4O1xyXG4gICY6OmFmdGVyLFxyXG4gICAgICY6OmJlZm9yZSB7XHJcblxyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci0yO1xyXG5cclxuICAgIH1cclxufVxyXG4ucG9ydGZvbGlvX19ib3gge1xyXG4gICAgbWF4LXdpZHRoOjQwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDMwcHggMnB4ICRjb2xvci01O1xyXG4gICAgbWFyZ2luOjVweDtcclxufVxyXG5cclxuLmJveF9fY29udGVudCB7XHJcbiAgICBmbGV4LWJhc2lzOjUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci0xO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIHBhZGRpbmc6MjBweDtcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG59XHJcblxyXG4uYm94X19uYW1le1xyXG4gIGZvbnQtc2l6ZToycmVtO1xyXG50ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XHJcbmZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbm1hcmdpbjogNDBweCBhdXRvO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi5ib3hfX2xpbmt7XHJcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgZm9udC1zaXplOjJyZW07XHJcbiAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbiAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xyXG4gIHBhZGRpbmc6NXB4IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbmJvcmRlci1yYWRpdXM6NXB4O1xyXG4gIHdpZHRoOjUwcHg7XHJcbiAgbWFyZ2luOjEwcHggMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiRjb2xvci01O1xyXG4gIGNvbG9yOiRjb2xvci0yO1xyXG50cmFuc2l0aW9uOiAuNnM7XHJcblxyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDE1JTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDQ1JTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkY29sb3ItMSwgMjAlKTtcclxuICAgIG9wYWNpdHk6IDAuNDtcclxuICAgIGJvdHRvbTogLTEwcHg7XHJcbiAgICBsZWZ0OjA7XHJcbiAgICByaWdodDowO1xyXG4gICAgdHJhbnNpdGlvbjogLjZzO1xyXG4gICAgbWFyZ2luOjAgYXV0bztcclxuICB9XHJcblxyXG4mOmhvdmVye1xyXG4gIHRyYW5zZm9ybTpzY2FsZSgxLjEpO1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgb3BhY2l0eTogMC4yO1xyXG4gICAgYm90dG9tOiAtMTJweDtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW46MCBhdXRvO1xyXG4gIH1cclxufVxyXG5cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi5ib3hfX2Rlc2NyaXB0aW9uIHtcclxuICAgIGZsZXgtYmFzaXM6NTAlO1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItMztcclxuICAgIGZvbnQtc2l6ZToxLjVyZW07XHJcbn1cclxuLmRlc2NyaXB0aW9uX19jb250ZW50e1xyXG4gYWxpZ24tdGV4dDpjZW50ZXI7XHJcbn1cclxuLmJveF9faWNvbnN7XHJcbmRpc3BsYXk6ZmxleDtcclxuanVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtcclxufVxyXG4ucG9ydGZvbGlvX19pY29ue1xyXG5tYXJnaW46NXB4O1xyXG59XHJcblxyXG4vKiBLT05UQUtUICovXHJcbi5jb250YWN0e1xyXG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjokY29sb3ItNTtcclxuICBjb2xvcjokY29sb3ItMjtcclxuICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xyXG4gICAgZmxleC13cmFwOndyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xyXG4gICAgcGFkZGluZy10b3A6NzBweDtcclxuICAgIGZvbnQtc2l6ZToxLjVyZW07XHJcbn1cclxuLmNvbnRhY3RfX2hlYWRlcntcclxuICBib3JkZXItY29sb3I6JGNvbG9yLTI7XHJcbiAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgdG9wOjBweDtcclxuICBsZWZ0OjIwcHg7XHJcbiAgJjo6YWZ0ZXIsXHJcbiAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItNTtcclxuICAgIH1cclxufVxyXG4uY29udGFjdF9fbWV0aG9ke1xyXG5kaXNwbGF5OmZsZXg7XHJcbmZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuanVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxufVxyXG4ubWV0aG9kX19tYWlse1xyXG5tYXJnaW46MjBweDtcclxufVxyXG4ubWV0aG9kX19zb2NpYWx7XHJcbmRpc3BsYXk6ZmxleDtcclxuZmxleC1kaXJlY3Rpb246cm93O1xyXG5qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xyXG5tYXJnaW46MTBweDtcclxucGFkZGluZzowO1xyXG59XHJcbi5zb2NpYWxfX2VsZW17XHJcbmxpc3Qtc3R5bGUtdHlwZTpub25lO1xyXG50ZXh0LWFsaWduOmNlbnRlcjtcclxufVxyXG4uc29jaWFsX19oZWFkZXJ7XHJcbnRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcclxubWFyZ2luOjVweDtcclxuXHJcblxyXG59XHJcbi5zb2NpYWxfX2ljb257XHJcbmZvbnQtc2l6ZToyLjVyZW07XHJcblxyXG59XHJcblxyXG4uY29udGFjdF9fYWRkcmVzc3tcclxuXHJcbn1cclxuXHJcbiNtYXAge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxuICAgICAgICAvLyBtYXJnaW46MCAtMjBweCAwcHgtMjBweDtcclxuICAgICAgfVxyXG5cclxuLmNvbnRhY3RfX21ldGhvZHtcclxuXHJcbn1cclxuXHJcblxyXG4vKiBGT09URVIgKi9cclxuXHJcbi5wYWdlX19mb290ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLTI7XHJcbiBoZWlnaHQ6YXV0bztcclxuIGZvbnQtc2l6ZToxLjVyZW07XHJcbiAvLyBtYXJnaW46MjBweCAtMjBweCAwcHggLTIwcHg7XHJcbn1cclxuLmZvb3Rlcl9fY29udGVudHtcclxuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xyXG4gIG1hcmdpbjowO1xyXG4gIHBhZGRpbmc6NXB4O1xyXG4gIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gIGNvbG9yOiRjb2xvci01O1xyXG59XHJcbiIsIkBpbXBvcnQgJ3ZlbmRvci9tb2Rlcm5pemUnO1xyXG5AaW1wb3J0ICd2ZW5kb3IvZm9udGVsbG8nO1xyXG5AaW1wb3J0ICdtb2R1bGVzL3NldHRpbmdzJztcclxuQGltcG9ydCAnbW9kdWxlcy9taXhpbnMnO1xyXG4vLyBAaW1wb3J0ICdtb2R1bGVzL2dyaWRzJztcclxuLy8gQGltcG9ydCAnbW9kdWxlcy9taXhpbnMnO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9oZWFkZXInO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9iYW5uZXInO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9hYm91dCc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL3NraWxscyc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL3BvcnRmb2xpbyc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL21haW4nO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9mb290ZXInO1xyXG5cclxuLmhpZGV7XHJcblx0ZGlzcGxheTpub25lO1xyXG59XHJcbiJdfQ== */
>>>>>>> 72c322764b7096f05446878303b0d1d43f71bc0d
